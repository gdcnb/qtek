(function(e){"undefined"!=typeof define&&define.amd?define(["exports"],e.bind(window)):e(window.qtek={})})(function(e){var t,r,n;(function(e){function i(e,t){return b.call(e,t)}function a(e,t){var r,n,i,a,o,s,u,c,l,f,h=t&&t.split("/"),d=g.map,v=d&&d["*"]||{};if(e&&"."===e.charAt(0))if(t){for(h=h.slice(0,h.length-1),e=h.concat(e.split("/")),c=0;e.length>c;c+=1)if(f=e[c],"."===f)e.splice(c,1),c-=1;else if(".."===f){if(1===c&&(".."===e[2]||".."===e[0]))break;c>0&&(e.splice(c-1,2),c-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((h||v)&&d){for(r=e.split("/"),c=r.length;c>0;c-=1){if(n=r.slice(0,c).join("/"),h)for(l=h.length;l>0;l-=1)if(i=d[h.slice(0,l).join("/")],i&&(i=i[n])){a=i,o=c;break}if(a)break;!s&&v&&v[n]&&(s=v[n],u=c)}!a&&s&&(a=s,o=u),a&&(r.splice(0,o,a),e=r.join("/"))}return e}function o(t,r){return function(){return d.apply(e,x.call(arguments,0).concat([t,r]))}}function s(e){return function(t){return a(t,e)}}function u(e){return function(t){m[e]=t}}function c(t){if(i(_,t)){var r=_[t];delete _[t],y[t]=!0,h.apply(e,r)}if(!i(m,t)&&!i(y,t))throw Error("No "+t);return m[t]}function l(e){var t,r=e?e.indexOf("!"):-1;return r>-1&&(t=e.substring(0,r),e=e.substring(r+1,e.length)),[t,e]}function f(e){return function(){return g&&g.config&&g.config[e]||{}}}var h,d,v,p,m={},_={},g={},y={},b=Object.prototype.hasOwnProperty,x=[].slice;v=function(e,t){var r,n=l(e),i=n[0];return e=n[1],i&&(i=a(i,t),r=c(i)),i?e=r&&r.normalize?r.normalize(e,s(t)):a(e,t):(e=a(e,t),n=l(e),i=n[0],e=n[1],i&&(r=c(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:r}},p={require:function(e){return o(e)},exports:function(e){var t=m[e];return t!==void 0?t:m[e]={}},module:function(e){return{id:e,uri:"",exports:m[e],config:f(e)}}},h=function(t,r,n,a){var s,l,f,h,d,g,b=[];if(a=a||t,"function"==typeof n){for(r=!r.length&&n.length?["require","exports","module"]:r,d=0;r.length>d;d+=1)if(h=v(r[d],a),l=h.f,"require"===l)b[d]=p.require(t);else if("exports"===l)b[d]=p.exports(t),g=!0;else if("module"===l)s=b[d]=p.module(t);else if(i(m,l)||i(_,l)||i(y,l))b[d]=c(l);else{if(!h.p)throw Error(t+" missing "+l);h.p.load(h.n,o(a,!0),u(l),{}),b[d]=m[l]}f=n.apply(m[t],b),t&&(s&&s.exports!==e&&s.exports!==m[t]?m[t]=s.exports:f===e&&g||(m[t]=f))}else t&&(m[t]=n)},t=r=d=function(t,r,n,i,a){return"string"==typeof t?p[t]?p[t](r):c(v(t,r).f):(t.splice||(g=t,r.splice?(t=r,r=n,n=null):t=e),r=r||function(){},"function"==typeof n&&(n=i,i=a),i?h(e,t,r,n):setTimeout(function(){h(e,t,r,n)},4),d)},d.config=function(e){return g=e,g.deps&&d(g.deps,g.callback),d},n=function(e,t,r){t.splice||(r=t,t=[]),i(m,e)||i(_,e)||(_[e]=[e,t,r])},n.amd={jQuery:!0}})(),n("../build/almond",function(){}),n("core/mixin/derive",[],function(){function e(e,t,r){"object"==typeof t&&(r=t,t=null);var n={"instanceof":function(e){for(var t=a;t;){if(t===e)return!0;t=t.__super__}}},i=this,a=function(r){if(i.call(this),_.extend(this,"function"==typeof e?e.call(this):e),_.extend(this,r),this.constructor==a){for(var n=a,o=[t];n.__super__;)n=n.__super__,o.unshift(n.__initialize__);for(var s=0;o.length>s;s++)o[s]&&o[s].call(this)}};return a.__super__=i,a.__initialize__=t,_.extend(a.prototype,i.prototype,n,r),a.prototype.constructor=a,a.derive=i.derive,a}return{derive:e}}),n("core/mixin/notifier",[],function(){return{trigger:function(){if(this.__handlers__){var e=arguments[0],t=Array.prototype.slice.call(arguments,1),r=this.__handlers__[e];if(r)for(var n=0;r.length>n;n+=2){var i=r[n],a=r[n+1];i.apply(a||this,t)}}},on:function(e,t,r){if(e){var n=this.__handlers__||(this.__handlers__={});return n[e]||(n[e]=[]),-1==n[e].indexOf(t)&&(n[e].push(t),n[e].push(r)),t}},off:function(e,t){var r=this.__handlers__||(this.__handlers__={});if(r[e])if(t){var n=r[e],i=n.indexOf(t);i>=0&&n.splice(i,2)}else r[e]=[]},has:function(e,t){return this.__handlers__&&this.__handlers__[e]?t?-1!==this.__handlers__[e].indexOf(t):this.__handlers__[e].length:!1}}}),n("core/mixin/dirty",{dirty:function(e){this._dirtyFlag||(this._dirtyFlag={}),this._dirtyFlag[e]=!0},fresh:function(e){this._dirtyFlag||(this._dirtyFlag={}),this._dirtyFlag[e]=!1},isDirty:function(e){return this._dirtyFlag||(this._dirtyFlag={}),this._dirtyFlag[e]===void 0?!0:this._dirtyFlag[e]}}),n("core/cache",[],function(){var e=function(){this._contextId="",this._caches={},this._context={}};return e.prototype={use:function(e,t){if(!this._caches.hasOwnProperty(e)&&(this._caches[e]={},t))for(var r in t)this._caches[e][r]=t[r];this._contextId=e,this._context=this._caches[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},clearContext:function(){this._caches[this._contextId]={},this._context={}},"delete":function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},miss:function(e){return!this._context.hasOwnProperty(e)}},e.prototype.constructor=e,e}),function(e){function t(n){function s(e){if(!e||nr.call(e)!=N)return o;var t=e.valueOf,r="function"==typeof t&&(r=Kt(t))&&Kt(r);return r?e==r||Kt(e)==r:Z(e)}function c(e,t,r){if(!e||!C[typeof e])return e;t=t&&r===void 0?t:V.createCallback(t,r);for(var n=-1,i=C[typeof e]?_r(e):[],a=i.length;a>++n&&(r=i[n],!(t(e[r],r,e)===o)););return e}function k(e,t,r){var n;if(!e||!C[typeof e])return e;t=t&&r===void 0?t:V.createCallback(t,r);for(n in e)if(t(e[n],n,e)===o)break;return e}function W(e,t,r){var n,i=e,a=i;if(!i)return a;for(var o=arguments,s=0,u="number"==typeof r?2:o.length;u>++s;)if((i=o[s])&&C[typeof i]){var c=i.length;if(n=-1,mr(i))for(;c>++n;)a[n]===void 0&&(a[n]=i[n]);else for(var l=-1,f=C[typeof i]?_r(i):[],c=f.length;c>++l;)n=f[l],a[n]===void 0&&(a[n]=i[n])}return a}function B(e,t,r){var n,i=e,a=i;if(!i)return a;var o=arguments,s=0,u="number"==typeof r?2:o.length;if(u>3&&"function"==typeof o[u-2])var c=V.createCallback(o[--u-1],o[u--],2);else u>2&&"function"==typeof o[u-1]&&(c=o[--u]);for(;u>++s;)if((i=o[s])&&C[typeof i]){var l=i.length;if(n=-1,mr(i))for(;l>++n;)a[n]=c?c(a[n],i[n]):i[n];else for(var f=-1,h=C[typeof i]?_r(i):[],l=h.length;l>++f;)n=h[f],a[n]=c?c(a[n],i[n]):i[n]}return a}function z(e){var t,r=[];if(!e||!C[typeof e])return r;for(t in e)$t.call(e,t)&&r.push(t);return r}function V(e){return e&&"object"==typeof e&&!mr(e)&&$t.call(e,"__wrapped__")?e:new Y(e)}function G(e){var t=e.length,r=t>=d;if(r)for(var n={},i=-1;t>++i;){var a=h+e[i];(n[a]||(n[a]=[])).push(e[i])}return function(t){if(r){var i=h+t;return n[i]&&wt(n[i],t)>-1}return wt(e,t)>-1}}function H(e){return e.charCodeAt(0)}function q(e,t){var r=e.b,n=t.b;if(e=e.a,t=t.a,e!==t){if(e>t||e===void 0)return 1;if(t>e||t===void 0)return-1}return n>r?-1:1}function j(e,t,r,n){function i(){var n=arguments,l=s?this:t;return o||(e=t[u]),r.length&&(n=n.length?(n=dr.call(n),c?n.concat(r):r.concat(n)):r),this instanceof i?(Q.prototype=e.prototype,l=new Q,Q.prototype=a,n=e.apply(l,n),at(n)?n:l):e.apply(l,n)}var o=it(e),s=!r,u=t;if(s){var c=n;r=t}else if(!o){if(!n)throw new Gt;t=e}return i}function X(e){return"\\"+U[e]}function J(e){return gr[e]}function Y(e){this.__wrapped__=e}function Q(){}function Z(e){var t=o;if(!e||nr.call(e)!=N)return t;var r=e.constructor;return(it(r)?r instanceof r:1)?(k(e,function(e,r){t=r}),t===o||$t.call(e,t)):t}function K(e,t,r){t||(t=0),r===void 0&&(r=e?e.length:0);var n=-1;r=r-t||0;for(var i=Lt(0>r?0:r);r>++n;)i[n]=e[t+n];return i}function $(e){return yr[e]}function et(e,t,n,i,a,s){var u=e;if("function"==typeof t&&(i=n,n=t,t=o),"function"==typeof n){if(n=i===void 0?n:V.createCallback(n,i,1),u=n(u),u!==void 0)return u;u=e}if(i=at(u)){var l=nr.call(u);if(!L[l])return u;var f=mr(u)}if(!i||!t)return i?f?K(u):B({},u):u;switch(i=vr[l],l){case M:case A:return new i(+u);case P:case S:return new i(u);case D:return i(u.source,y.exec(u))}for(a||(a=[]),s||(s=[]),l=a.length;l--;)if(a[l]==e)return s[l];return u=f?i(u.length):{},f&&($t.call(e,"index")&&(u.index=e.index),$t.call(e,"input")&&(u.input=e.input)),a.push(e),s.push(u),(f?vt:c)(e,function(e,i){u[i]=et(e,t,n,r,a,s)}),u}function tt(e){var t=[];return k(e,function(e,r){it(e)&&t.push(r)}),t.sort()}function rt(e){for(var t=-1,r=_r(e),n=r.length,i={};n>++t;){var a=r[t];i[e[a]]=a}return i}function nt(e,t,r,n,s,u){var c=r===f;if("function"==typeof r&&!c){r=V.createCallback(r,n,2);var l=r(e,t);if(l!==void 0)return!!l}if(e===t)return 0!==e||1/e==1/t;var h=typeof e,d=typeof t;if(e===e&&(!e||"function"!=h&&"object"!=h)&&(!t||"function"!=d&&"object"!=d))return o;if(e==a||t==a)return e===t;if(d=nr.call(e),h=nr.call(t),d==O&&(d=N),h==O&&(h=N),d!=h)return o;switch(d){case M:case A:return+e==+t;case P:return e!=+e?t!=+t:0==e?1/e==1/t:e==+t;case D:case S:return e==Vt(t)}if(h=d==R,!h){if($t.call(e,"__wrapped__")||$t.call(t,"__wrapped__"))return nt(e.__wrapped__||e,t.__wrapped__||t,r,n,s,u);if(d!=N)return o;var d=e.constructor,v=t.constructor;if(!(d==v||it(d)&&d instanceof d&&it(v)&&v instanceof v))return o}for(s||(s=[]),u||(u=[]),d=s.length;d--;)if(s[d]==e)return u[d]==t;var p=0,l=i;if(s.push(e),u.push(t),h){if(d=e.length,p=t.length,l=p==e.length,!l&&!c)return l;for(;p--;)if(h=d,v=t[p],c)for(;h--&&!(l=nt(e[h],v,r,n,s,u)););else if(!(l=nt(e[p],v,r,n,s,u)))break;return l}return k(t,function(t,i,a){return $t.call(a,i)?(p++,l=$t.call(e,i)&&nt(e[i],t,r,n,s,u)):void 0}),l&&!c&&k(e,function(e,t,r){return $t.call(r,t)?l=--p>-1:void 0}),l}function it(e){return"function"==typeof e}function at(e){return e?C[typeof e]:o}function ot(e){return"number"==typeof e||nr.call(e)==P}function st(e){return"string"==typeof e||nr.call(e)==S}function ut(e,t,r){var n=arguments,i=0,a=2;if(!at(e))return e;if(r===f)var o=n[3],u=n[4],l=n[5];else u=[],l=[],"number"!=typeof r&&(a=n.length),a>3&&"function"==typeof n[a-2]?o=V.createCallback(n[--a-1],n[a--],2):a>2&&"function"==typeof n[a-1]&&(o=n[--a]);for(;a>++i;)(mr(n[i])?vt:c)(n[i],function(t,r){var n,i,a=t,c=e[r];if(t&&((i=mr(t))||s(t))){for(a=u.length;a--;)if(n=u[a]==t){c=l[a];break}if(!n){var h;o&&(a=o(c,t),h=a!==void 0)&&(c=a),h||(c=i?mr(c)?c:[]:s(c)?c:{}),u.push(t),l.push(c),h||(c=ut(c,t,f,o,u,l))}}else o&&(a=o(c,t),a===void 0&&(a=t)),a!==void 0&&(c=a);e[r]=c});return e}function ct(e){for(var t=-1,r=_r(e),n=r.length,i=Lt(n);n>++t;)i[t]=e[r[t]];return i}function lt(e,t,r){var n=-1,i=e?e.length:0,a=o;return r=(0>r?cr(0,i+r):r)||0,"number"==typeof i?a=(st(e)?e.indexOf(t,r):wt(e,t,r))>-1:c(e,function(e){return r>++n?void 0:!(a=e===t)}),a}function ft(e,t,r){var n=i;t=V.createCallback(t,r),r=-1;var a=e?e.length:0;if("number"==typeof a)for(;a>++r&&(n=!!t(e[r],r,e)););else c(e,function(e,r,i){return n=!!t(e,r,i)});return n}function ht(e,t,r){var n=[];t=V.createCallback(t,r),r=-1;var i=e?e.length:0;if("number"==typeof i)for(;i>++r;){var a=e[r];t(a,r,e)&&n.push(a)}else c(e,function(e,r,i){t(e,r,i)&&n.push(e)});return n}function dt(e,t,r){t=V.createCallback(t,r),r=-1;var n=e?e.length:0;if("number"!=typeof n){var i;return c(e,function(e,r,n){return t(e,r,n)?(i=e,o):void 0}),i}for(;n>++r;){var a=e[r];if(t(a,r,e))return a}}function vt(e,t,r){var n=-1,i=e?e.length:0;if(t=t&&r===void 0?t:V.createCallback(t,r),"number"==typeof i)for(;i>++n&&t(e[n],n,e)!==o;);else c(e,t);return e}function pt(e,t,r){var n=-1,i=e?e.length:0;if(t=V.createCallback(t,r),"number"==typeof i)for(var a=Lt(i);i>++n;)a[n]=t(e[n],n,e);else a=[],c(e,function(e,r,i){a[++n]=t(e,r,i)});return a}function mt(e,t,r){var n=-1/0,i=n;if(!t&&mr(e)){r=-1;for(var a=e.length;a>++r;){var o=e[r];o>i&&(i=o)}}else t=!t&&st(e)?H:V.createCallback(t,r),vt(e,function(e,r,a){r=t(e,r,a),r>n&&(n=r,i=e)});return i}function _t(e,t){var r=-1,n=e?e.length:0;if("number"==typeof n)for(var i=Lt(n);n>++r;)i[r]=e[r][t];return i||pt(e,t)}function gt(e,t,r,n){if(!e)return r;var i=3>arguments.length;t=V.createCallback(t,n,4);var a=-1,s=e.length;if("number"==typeof s)for(i&&(r=e[++a]);s>++a;)r=t(r,e[a],a,e);else c(e,function(e,n,a){r=i?(i=o,e):t(r,e,n,a)});return r}function yt(e,t,r,n){var i=e?e.length:0,a=3>arguments.length;if("number"!=typeof i)var s=_r(e),i=s.length;return t=V.createCallback(t,n,4),vt(e,function(n,u,c){u=s?s[--i]:--i,r=a?(a=o,e[u]):t(r,e[u],u,c)}),r}function bt(e,t,r){var n;t=V.createCallback(t,r),r=-1;var i=e?e.length:0;if("number"==typeof i)for(;i>++r&&!(n=t(e[r],r,e)););else c(e,function(e,r,i){return!(n=t(e,r,i))});return!!n}function xt(e){for(var t=-1,r=e?e.length:0,n=Qt.apply(Ht,dr.call(arguments,1)),n=G(n),i=[];r>++t;){var a=e[t];n(a)||i.push(a)}return i}function Et(e,t,r){if(e){var n=0,i=e.length;if("number"!=typeof t&&t!=a){var o=-1;for(t=V.createCallback(t,r);i>++o&&t(e[o],o,e);)n++}else if(n=t,n==a||r)return e[0];return K(e,0,lr(cr(0,n),i))}}function Tt(e,t,r,n){var i=-1,s=e?e.length:0,u=[];for("boolean"!=typeof t&&t!=a&&(n=r,r=t,t=o),r!=a&&(r=V.createCallback(r,n));s>++i;)n=e[i],r&&(n=r(n,i,e)),mr(n)?er.apply(u,t?n:Tt(n)):u.push(n);return u}function wt(e,t,r){var n=-1,i=e?e.length:0;if("number"==typeof r)n=(0>r?cr(0,i+r):r||0)-1;else if(r)return n=Ot(e,t),e[n]===t?n:-1;for(;i>++n;)if(e[n]===t)return n;return-1}function It(e,t,r){if("number"!=typeof t&&t!=a){var n=0,i=-1,o=e?e.length:0;for(t=V.createCallback(t,r);o>++i&&t(e[i],i,e);)n++}else n=t==a||r?1:cr(0,t);return K(e,n)}function Ot(e,t,r,n){var i=0,a=e?e.length:i;for(r=r?V.createCallback(r,n,1):Nt,t=r(t);a>i;)n=i+a>>>1,t>r(e[n])?i=n+1:a=n;return i}function Rt(e,t,r,n){var i=-1,s=e?e.length:0,u=[],c=u;"boolean"!=typeof t&&t!=a&&(n=r,r=t,t=o);var l=!t&&s>=d;if(l)var f={};for(r!=a&&(c=[],r=V.createCallback(r,n));s>++i;){n=e[i];var v=r?r(n,i,e):n;if(l)var p=h+v,p=f[p]?!(c=f[p]):c=f[p]=[];(t?!i||c[c.length-1]!==v:p||0>wt(c,v))&&((r||l)&&c.push(v),u.push(n))}return u}function Mt(e,t){for(var r=-1,n=e?e.length:0,i={};n>++r;){var a=e[r];t?i[a]=t[r]:i[a[0]]=a[1]}return i}function At(e,t){return pr.fastBind||ir&&arguments.length>2?ir.call.apply(ir,arguments):j(e,t,dr.call(arguments,2))}function Pt(e){var t=dr.call(arguments,1);return rr(function(){e.apply(r,t)},1)}function Nt(e){return e}function Dt(e){vt(tt(e),function(t){var r=V[t]=e[t];V.prototype[t]=function(){var e=this.__wrapped__,t=[e];return er.apply(t,arguments),t=r.apply(V,t),e&&"object"==typeof e&&e==t?this:new Y(t)}})}function St(){return this.__wrapped__}n=n?F.defaults(e.Object(),n,F.pick(e,I)):e;var Lt=n.Array,Ct=n.Boolean,Ut=n.Date,Ft=n.Function,kt=n.Math,Wt=n.Number,Bt=n.Object,zt=n.RegExp,Vt=n.String,Gt=n.TypeError,Ht=Lt(),qt=Bt(),jt=n._,Xt=zt("^"+Vt(qt.valueOf).replace(/[.*+?^${}()|[\]\\]/g,"\\$&").replace(/valueOf|for [^\]]+/g,".+?")+"$"),Jt=kt.ceil,Yt=n.clearTimeout,Qt=Ht.concat,Zt=kt.floor,Kt=Xt.test(Kt=Bt.getPrototypeOf)&&Kt,$t=qt.hasOwnProperty,er=Ht.push,tr=n.setImmediate,rr=n.setTimeout,nr=qt.toString,ir=Xt.test(ir=nr.bind)&&ir,ar=Xt.test(ar=Lt.isArray)&&ar,or=n.isFinite,sr=n.isNaN,ur=Xt.test(ur=Bt.keys)&&ur,cr=kt.max,lr=kt.min,fr=n.parseInt,hr=kt.random,dr=Ht.slice,kt=Xt.test(n.attachEvent),kt=ir&&!/\n|true/.test(ir+kt),vr={};vr[R]=Lt,vr[M]=Ct,vr[A]=Ut,vr[N]=Bt,vr[P]=Wt,vr[D]=zt,vr[S]=Vt;var pr=V.support={};pr.fastBind=ir&&!kt,V.templateSettings={escape:/<%-([\s\S]+?)%>/g,evaluate:/<%([\s\S]+?)%>/g,interpolate:b,variable:"",imports:{_:V}},Y.prototype=V.prototype;var mr=ar||function(e){return e?"object"==typeof e&&nr.call(e)==R:o},_r=ur?function(e){return at(e)?ur(e):[]}:z,gr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},yr=rt(gr);return kt&&u&&"function"==typeof tr&&(Pt=At(tr,n)),Ct=8==fr("08")?fr:function(e,t){return fr(st(e)?e.replace(x,""):e,t||0)},V.after=function(e,t){return 1>e?t():function(){return 1>--e?t.apply(this,arguments):void 0}},V.assign=B,V.at=function(e){for(var t=-1,r=Qt.apply(Ht,dr.call(arguments,1)),n=r.length,i=Lt(n);n>++t;)i[t]=e[r[t]];return i},V.bind=At,V.bindAll=function(e){for(var t=arguments.length>1?Qt.apply(Ht,dr.call(arguments,1)):tt(e),r=-1,n=t.length;n>++r;){var i=t[r];e[i]=At(e[i],e)}return e},V.bindKey=function(e,t){return j(e,t,dr.call(arguments,2),f)},V.compact=function(e){for(var t=-1,r=e?e.length:0,n=[];r>++t;){var i=e[t];i&&n.push(i)}return n},V.compose=function(){var e=arguments;return function(){for(var t=arguments,r=e.length;r--;)t=[e[r].apply(this,t)];return t[0]}},V.countBy=function(e,t,r){var n={};return t=V.createCallback(t,r),vt(e,function(e,r,i){r=Vt(t(e,r,i)),$t.call(n,r)?n[r]++:n[r]=1}),n},V.createCallback=function(e,t,r){if(e==a)return Nt;var n=typeof e;if("function"!=n){if("object"!=n)return function(t){return t[e]};var i=_r(e);return function(t){for(var r=i.length,n=o;r--&&(n=nt(t[i[r]],e[i[r]],f)););return n}}return t!==void 0?1===r?function(r){return e.call(t,r)}:2===r?function(r,n){return e.call(t,r,n)}:4===r?function(r,n,i,a){return e.call(t,r,n,i,a)}:function(r,n,i){return e.call(t,r,n,i)}:e},V.debounce=function(e,t,r){function n(){u=f=a,h&&(c=e.apply(l,s))}var s,u,c,l,f,h=i;if(r===i)var d=i,h=o;else r&&C[typeof r]&&(d=r.leading,h="trailing"in r?r.trailing:h);return function(){return s=arguments,l=this,Yt(f),!u&&d?(u=i,c=e.apply(l,s)):f=rr(n,t),c}},V.defaults=W,V.defer=Pt,V.delay=function(e,t){var n=dr.call(arguments,2);return rr(function(){e.apply(r,n)},t)},V.difference=xt,V.filter=ht,V.flatten=Tt,V.forEach=vt,V.forIn=k,V.forOwn=c,V.functions=tt,V.groupBy=function(e,t,r){var n={};return t=V.createCallback(t,r),vt(e,function(e,r,i){r=Vt(t(e,r,i)),($t.call(n,r)?n[r]:n[r]=[]).push(e)}),n},V.initial=function(e,t,r){if(!e)return[];var n=0,i=e.length;if("number"!=typeof t&&t!=a){var o=i;for(t=V.createCallback(t,r);o--&&t(e[o],o,e);)n++}else n=t==a||r?1:t||n;return K(e,0,lr(cr(0,i-n),i))},V.intersection=function(e){var t=arguments,r=t.length,n={0:{}},i=-1,a=e?e.length:0,o=a>=d,s=[],u=s;e:for(;a>++i;){var c=e[i];if(o)var l=h+c,l=n[0][l]?!(u=n[0][l]):u=n[0][l]=[];if(l||0>wt(u,c)){o&&u.push(c);for(var f=r;--f;)if(!(n[f]||(n[f]=G(t[f])))(c))continue e;s.push(c)}}return s},V.invert=rt,V.invoke=function(e,t){var r=dr.call(arguments,2),n=-1,i="function"==typeof t,a=e?e.length:0,o=Lt("number"==typeof a?a:0);return vt(e,function(e){o[++n]=(i?t:e[t]).apply(e,r)}),o},V.keys=_r,V.map=pt,V.max=mt,V.memoize=function(e,t){var r={};return function(){var n=h+(t?t.apply(this,arguments):arguments[0]);return $t.call(r,n)?r[n]:r[n]=e.apply(this,arguments)}},V.merge=ut,V.min=function(e,t,r){var n=1/0,i=n;if(!t&&mr(e)){r=-1;for(var a=e.length;a>++r;){var o=e[r];i>o&&(i=o)}}else t=!t&&st(e)?H:V.createCallback(t,r),vt(e,function(e,r,a){r=t(e,r,a),n>r&&(n=r,i=e)});return i},V.omit=function(e,t,r){var n="function"==typeof t,i={};if(n)t=V.createCallback(t,r);else var a=Qt.apply(Ht,dr.call(arguments,1));return k(e,function(e,r,o){(n?!t(e,r,o):0>wt(a,r))&&(i[r]=e)}),i},V.once=function(e){var t,r;return function(){return t?r:(t=i,r=e.apply(this,arguments),e=a,r)}},V.pairs=function(e){for(var t=-1,r=_r(e),n=r.length,i=Lt(n);n>++t;){var a=r[t];i[t]=[a,e[a]]}return i},V.partial=function(e){return j(e,dr.call(arguments,1))},V.partialRight=function(e){return j(e,dr.call(arguments,1),a,f)},V.pick=function(e,t,r){var n={};if("function"!=typeof t)for(var i=-1,a=Qt.apply(Ht,dr.call(arguments,1)),o=at(e)?a.length:0;o>++i;){var s=a[i];s in e&&(n[s]=e[s])}else t=V.createCallback(t,r),k(e,function(e,r,i){t(e,r,i)&&(n[r]=e)});return n},V.pluck=_t,V.range=function(e,t,r){e=+e||0,r=+r||1,t==a&&(t=e,e=0);var n=-1;t=cr(0,Jt((t-e)/r));for(var i=Lt(t);t>++n;)i[n]=e,e+=r;return i},V.reject=function(e,t,r){return t=V.createCallback(t,r),ht(e,function(e,r,n){return!t(e,r,n)})},V.rest=It,V.shuffle=function(e){var t=-1,r=e?e.length:0,n=Lt("number"==typeof r?r:0);return vt(e,function(e){var r=Zt(hr()*(++t+1));n[t]=n[r],n[r]=e}),n},V.sortBy=function(e,t,r){var n=-1,i=e?e.length:0,a=Lt("number"==typeof i?i:0);for(t=V.createCallback(t,r),vt(e,function(e,r,i){a[++n]={a:t(e,r,i),b:n,c:e}}),i=a.length,a.sort(q);i--;)a[i]=a[i].c;return a},V.tap=function(e,t){return t(e),e},V.throttle=function(e,t,r){function n(){l=a,d&&(f=new Ut,u=e.apply(c,s))}var s,u,c,l,f=0,h=i,d=i;return r===o?h=o:r&&C[typeof r]&&(h="leading"in r?r.leading:h,d="trailing"in r?r.trailing:d),function(){var r=new Ut;!l&&!h&&(f=r);var i=t-(r-f);return s=arguments,c=this,i>0?l||(l=rr(n,i)):(Yt(l),l=a,f=r,u=e.apply(c,s)),u}},V.times=function(e,t,r){e=(e=+e)>-1?e:0;var n=-1,i=Lt(e);for(t=V.createCallback(t,r,1);e>++n;)i[n]=t(n);return i},V.toArray=function(e){return e&&"number"==typeof e.length?K(e):ct(e)},V.union=function(e){return mr(e)||(arguments[0]=e?dr.call(e):Ht),Rt(Qt.apply(Ht,arguments))},V.uniq=Rt,V.unzip=function(e){for(var t=-1,r=e?e.length:0,n=r?mt(_t(e,"length")):0,i=Lt(n);r>++t;)for(var a=-1,o=e[t];n>++a;)(i[a]||(i[a]=Lt(r)))[t]=o[a];return i},V.values=ct,V.where=ht,V.without=function(e){return xt(e,dr.call(arguments,1))},V.wrap=function(e,t){return function(){var r=[e];return er.apply(r,arguments),t.apply(this,r)}},V.zip=function(e){for(var t=-1,r=e?mt(_t(arguments,"length")):0,n=Lt(r);r>++t;)n[t]=_t(arguments,t);return n},V.zipObject=Mt,V.collect=pt,V.drop=It,V.each=vt,V.extend=B,V.methods=tt,V.object=Mt,V.select=ht,V.tail=It,V.unique=Rt,Dt(V),V.clone=et,V.cloneDeep=function(e,t,r){return et(e,i,t,r)},V.contains=lt,V.escape=function(e){return e==a?"":Vt(e).replace(T,J)},V.every=ft,V.find=dt,V.findIndex=function(e,t,r){var n=-1,i=e?e.length:0;for(t=V.createCallback(t,r);i>++n;)if(t(e[n],n,e))return n;return-1},V.findKey=function(e,t,r){var n;return t=V.createCallback(t,r),c(e,function(e,r,i){return t(e,r,i)?(n=r,o):void 0}),n},V.has=function(e,t){return e?$t.call(e,t):o},V.identity=Nt,V.indexOf=wt,V.isArguments=function(e){return nr.call(e)==O},V.isArray=mr,V.isBoolean=function(e){return e===i||e===o||nr.call(e)==M},V.isDate=function(e){return e?"object"==typeof e&&nr.call(e)==A:o},V.isElement=function(e){return e?1===e.nodeType:o},V.isEmpty=function(e){var t=i;if(!e)return t;var r=nr.call(e),n=e.length;return r==R||r==S||r==O||r==N&&"number"==typeof n&&it(e.splice)?!n:(c(e,function(){return t=o}),t)},V.isEqual=nt,V.isFinite=function(e){return or(e)&&!sr(parseFloat(e))},V.isFunction=it,V.isNaN=function(e){return ot(e)&&e!=+e},V.isNull=function(e){return e===a},V.isNumber=ot,V.isObject=at,V.isPlainObject=s,V.isRegExp=function(e){return e?"object"==typeof e&&nr.call(e)==D:o},V.isString=st,V.isUndefined=function(e){return e===void 0},V.lastIndexOf=function(e,t,r){var n=e?e.length:0;for("number"==typeof r&&(n=(0>r?cr(0,n+r):lr(r,n-1))+1);n--;)if(e[n]===t)return n;return-1},V.mixin=Dt,V.noConflict=function(){return n._=jt,this},V.parseInt=Ct,V.random=function(e,t){return e==a&&t==a&&(t=1),e=+e||0,t==a&&(t=e,e=0),e+Zt(hr()*((+t||0)-e+1))},V.reduce=gt,V.reduceRight=yt,V.result=function(e,t){var n=e?e[t]:r;return it(n)?e[t]():n},V.runInContext=t,V.size=function(e){var t=e?e.length:0;return"number"==typeof t?t:_r(e).length},V.some=bt,V.sortedIndex=Ot,V.template=function(e,t,n){var a=V.templateSettings;e||(e=""),n=W({},n,a);var o,s=W({},n.imports,a.imports),a=_r(s),s=ct(s),u=0,c=n.interpolate||E,l="__p+='",c=zt((n.escape||E).source+"|"+c.source+"|"+(c===b?g:E).source+"|"+(n.evaluate||E).source+"|$","g");e.replace(c,function(t,r,n,a,s,c){return n||(n=a),l+=e.slice(u,c).replace(w,X),r&&(l+="'+__e("+r+")+'"),s&&(o=i,l+="';"+s+";__p+='"),n&&(l+="'+((__t=("+n+"))==null?'':__t)+'"),u=c+t.length,t}),l+="';\n",c=n=n.variable,c||(n="obj",l="with("+n+"){"+l+"}"),l=(o?l.replace(v,""):l).replace(p,"$1").replace(m,"$1;"),l="function("+n+"){"+(c?"":n+"||("+n+"={});")+"var __t,__p='',__e=_.escape"+(o?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+l+"return __p}";try{var f=Ft(a,"return "+l).apply(r,s)}catch(h){throw h.source=l,h}return t?f(t):(f.source=l,f)},V.unescape=function(e){return e==a?"":Vt(e).replace(_,$)},V.uniqueId=function(e){var t=++l;return Vt(e==a?"":e)+t},V.all=ft,V.any=bt,V.detect=dt,V.foldl=gt,V.foldr=yt,V.include=lt,V.inject=gt,c(V,function(e,t){V.prototype[t]||(V.prototype[t]=function(){var t=[this.__wrapped__];return er.apply(t,arguments),e.apply(V,t)})}),V.first=Et,V.last=function(e,t,r){if(e){var n=0,i=e.length;if("number"!=typeof t&&t!=a){var o=i;for(t=V.createCallback(t,r);o--&&t(e[o],o,e);)n++}else if(n=t,n==a||r)return e[i-1];return K(e,cr(0,i-n))}},V.take=Et,V.head=Et,c(V,function(e,t){V.prototype[t]||(V.prototype[t]=function(t,r){var n=e(this.__wrapped__,t,r);return t==a||r&&"function"!=typeof t?n:new Y(n)})}),V.VERSION="1.2.0",V.prototype.toString=function(){return Vt(this.__wrapped__)},V.prototype.value=St,V.prototype.valueOf=St,vt(["join","pop","shift"],function(e){var t=Ht[e];V.prototype[e]=function(){return t.apply(this.__wrapped__,arguments)}}),vt(["push","reverse","sort","unshift"],function(e){var t=Ht[e];V.prototype[e]=function(){return t.apply(this.__wrapped__,arguments),this}}),vt(["concat","slice","splice"],function(e){var t=Ht[e];V.prototype[e]=function(){return new Y(t.apply(this.__wrapped__,arguments))}}),V}var r,i=!0,a=null,o=!1,s="object"==typeof exports&&exports,u="object"==typeof module&&module&&module.exports==s&&module,c="object"==typeof global&&global;(c.global===c||c.window===c)&&(e=c);var l=0,f={},h=+new Date+"",d=200,v=/\b__p\+='';/g,p=/\b(__p\+=)''\+/g,m=/(__e\(.*?\)|\b__t\))\+'';/g,_=/&(?:amp|lt|gt|quot|#39);/g,g=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,y=/\w*$/,b=/<%=([\s\S]+?)%>/g,x=/^0+(?=.$)/,E=/($^)/,T=/[&<>"']/g,w=/['\n\r\t\u2028\u2029\\]/g,I="Array Boolean Date Function Math Number Object RegExp String _ attachEvent clearTimeout isFinite isNaN parseInt setImmediate setTimeout".split(" "),O="[object Arguments]",R="[object Array]",M="[object Boolean]",A="[object Date]",P="[object Number]",N="[object Object]",D="[object RegExp]",S="[object String]",L={"[object Function]":o};L[O]=L[R]=L[M]=L[A]=L[P]=L[N]=L[D]=L[S]=i;var C={"boolean":o,"function":i,object:i,number:o,string:o,undefined:o},U={"\\":"\\","'":"'","\n":"n","\r":"r","	":"t","\u2028":"u2028","\u2029":"u2029"},F=t();"function"==typeof n&&"object"==typeof n.amd&&n.amd?(e._=F,n("_",[],function(){return F})):s&&!s.nodeType?u?(u.exports=F)._=F:s._=F:e._=F}(this),n("core/base",["require","./mixin/derive","./mixin/notifier","./mixin/dirty","./cache","_"],function(e){var t=e("./mixin/derive"),r=e("./mixin/notifier"),n=e("./mixin/dirty"),i=e("./cache"),a=e("_"),o=function(){this.cache=new i};return a.extend(o,t),a.extend(o.prototype,r),a.extend(o.prototype,n),o}),function(e){var t={};"undefined"==typeof exports?"function"==typeof n&&"object"==typeof n.amd&&n.amd?(t.exports={},n("glmatrix",[],function(){return t.exports})):t.exports="undefined"!=typeof window?window:e:t.exports=exports,function(e){if(!t)var t=1e-6;if(!r)var r="undefined"!=typeof Float32Array?Float32Array:Array;if(!n)var n=Math.random;var i={};i.setMatrixArrayType=function(e){r=e},e!==void 0&&(e.glMatrix=i);var a={};a.create=function(){var e=new r(2);return e[0]=0,e[1]=0,e},a.clone=function(e){var t=new r(2);return t[0]=e[0],t[1]=e[1],t},a.fromValues=function(e,t){var n=new r(2);return n[0]=e,n[1]=t,n},a.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e},a.set=function(e,t,r){return e[0]=t,e[1]=r,e},a.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},a.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e},a.sub=a.subtract,a.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e},a.mul=a.multiply,a.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e},a.div=a.divide,a.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e},a.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e},a.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},a.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e},a.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},a.dist=a.distance,a.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n},a.sqrDist=a.squaredDistance,a.length=function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},a.len=a.length,a.squaredLength=function(e){var t=e[0],r=e[1];return t*t+r*r},a.sqrLen=a.squaredLength,a.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},a.normalize=function(e,t){var r=t[0],n=t[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},a.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},a.cross=function(e,t,r){var n=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=n,e},a.lerp=function(e,t,r,n){var i=t[0],a=t[1];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e},a.random=function(e,t){t=t||1;var r=2*n()*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e},a.transformMat2=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i,e[1]=r[1]*n+r[3]*i,e},a.transformMat2d=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i+r[4],e[1]=r[1]*n+r[3]*i+r[5],e},a.transformMat3=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[3]*i+r[6],e[1]=r[1]*n+r[4]*i+r[7],e},a.transformMat4=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[4]*i+r[12],e[1]=r[1]*n+r[5]*i+r[13],e},a.forEach=function(){var e=a.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=2),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;u>s;s+=r)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}(),a.str=function(e){return"vec2("+e[0]+", "+e[1]+")"},e!==void 0&&(e.vec2=a);var o={};o.create=function(){var e=new r(3);return e[0]=0,e[1]=0,e[2]=0,e},o.clone=function(e){var t=new r(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},o.fromValues=function(e,t,n){var i=new r(3);return i[0]=e,i[1]=t,i[2]=n,i},o.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},o.set=function(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e},o.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e},o.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e},o.sub=o.subtract,o.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e},o.mul=o.multiply,o.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e},o.div=o.divide,o.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e},o.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e},o.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e},o.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e},o.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(r*r+n*n+i*i)},o.dist=o.distance,o.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return r*r+n*n+i*i},o.sqrDist=o.squaredDistance,o.length=function(e){var t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)},o.len=o.length,o.squaredLength=function(e){var t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n},o.sqrLen=o.squaredLength,o.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},o.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},o.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},o.cross=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2];return e[0]=i*u-a*s,e[1]=a*o-n*u,e[2]=n*s-i*o,e},o.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e},o.random=function(e,t){t=t||1;var r=2*n()*Math.PI,i=2*n()-1,a=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(r)*a,e[1]=Math.sin(r)*a,e[2]=i*t,e},o.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2];return e[0]=r[0]*n+r[4]*i+r[8]*a+r[12],e[1]=r[1]*n+r[5]*i+r[9]*a+r[13],e[2]=r[2]*n+r[6]*i+r[10]*a+r[14],e},o.transformMat3=function(e,t,r){var n=t[0],i=t[1],a=t[2];return e[0]=n*r[0]+i*r[3]+a*r[6],e[1]=n*r[1]+i*r[4]+a*r[7],e[2]=n*r[2]+i*r[5]+a*r[8],e},o.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],c=r[3],l=c*n+s*a-u*i,f=c*i+u*n-o*a,h=c*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=l*c+d*-o+f*-u-h*-s,e[1]=f*c+d*-s+h*-o-l*-u,e[2]=h*c+d*-u+l*-s-f*-o,e},o.forEach=function(){var e=o.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=3),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;u>s;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),o.str=function(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"},e!==void 0&&(e.vec3=o);var s={};s.create=function(){var e=new r(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},s.clone=function(e){var t=new r(4);
return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},s.fromValues=function(e,t,n,i){var a=new r(4);return a[0]=e,a[1]=t,a[2]=n,a[3]=i,a},s.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},s.set=function(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e},s.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},s.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e},s.sub=s.subtract,s.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e},s.mul=s.multiply,s.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e},s.div=s.divide,s.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},s.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},s.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},s.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e},s.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(r*r+n*n+i*i+a*a)},s.dist=s.distance,s.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return r*r+n*n+i*i+a*a},s.sqrDist=s.squaredDistance,s.length=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return Math.sqrt(t*t+r*r+n*n+i*i)},s.len=s.length,s.squaredLength=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return t*t+r*r+n*n+i*i},s.sqrLen=s.squaredLength,s.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},s.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},s.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},s.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e[3]=s+n*(r[3]-s),e},s.random=function(e,t){return t=t||1,e[0]=n(),e[1]=n(),e[2]=n(),e[3]=n(),s.normalize(e,e),s.scale(e,e,t),e},s.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3];return e[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,e[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,e[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,e[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,e},s.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],c=r[3],l=c*n+s*a-u*i,f=c*i+u*n-o*a,h=c*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=l*c+d*-o+f*-u-h*-s,e[1]=f*c+d*-s+h*-o-l*-u,e[2]=h*c+d*-u+l*-s-f*-o,e},s.forEach=function(){var e=s.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=4),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;u>s;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),s.str=function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},e!==void 0&&(e.vec4=s);var u={};u.create=function(){var e=new r(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},u.clone=function(e){var t=new r(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},u.transpose=function(e,t){if(e===t){var r=t[1];e[1]=t[2],e[2]=r}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},u.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*a-i*n;return o?(o=1/o,e[0]=a*o,e[1]=-n*o,e[2]=-i*o,e[3]=r*o,e):null},u.adjoint=function(e,t){var r=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=r,e},u.determinant=function(e){return e[0]*e[3]-e[2]*e[1]},u.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],c=r[2],l=r[3];return e[0]=n*s+i*c,e[1]=n*u+i*l,e[2]=a*s+o*c,e[3]=a*u+o*l,e},u.mul=u.multiply,u.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+i*s,e[1]=n*-s+i*u,e[2]=a*u+o*s,e[3]=a*-s+o*u,e},u.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1];return e[0]=n*s,e[1]=i*u,e[2]=a*s,e[3]=o*u,e},u.str=function(e){return"mat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},e!==void 0&&(e.mat2=u);var c={};c.create=function(){var e=new r(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.clone=function(e){var t=new r(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},c.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},c.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=r*a-n*i;return u?(u=1/u,e[0]=a*u,e[1]=-n*u,e[2]=-i*u,e[3]=r*u,e[4]=(i*s-a*o)*u,e[5]=(n*o-r*s)*u,e):null},c.determinant=function(e){return e[0]*e[3]-e[1]*e[2]},c.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=r[0],l=r[1],f=r[2],h=r[3],d=r[4],v=r[5];return e[0]=n*c+i*f,e[1]=n*l+i*h,e[2]=a*c+o*f,e[3]=a*l+o*h,e[4]=c*s+f*u+d,e[5]=l*s+h*u+v,e},c.mul=c.multiply,c.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=Math.sin(r),l=Math.cos(r);return e[0]=n*l+i*c,e[1]=-n*c+i*l,e[2]=a*l+o*c,e[3]=-a*c+l*o,e[4]=l*s+c*u,e[5]=l*u-c*s,e},c.scale=function(e,t,r){var n=r[0],i=r[1];return e[0]=t[0]*n,e[1]=t[1]*i,e[2]=t[2]*n,e[3]=t[3]*i,e[4]=t[4]*n,e[5]=t[5]*i,e},c.translate=function(e,t,r){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4]+r[0],e[5]=t[5]+r[1],e},c.str=function(e){return"mat2d("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+")"},e!==void 0&&(e.mat2d=c);var l={};l.create=function(){var e=new r(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},l.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},l.clone=function(e){var t=new r(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},l.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},l.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},l.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},l.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],c=t[7],l=t[8],f=l*o-s*c,h=-l*a+s*u,d=c*a-o*u,v=r*f+n*h+i*d;return v?(v=1/v,e[0]=f*v,e[1]=(-l*n+i*c)*v,e[2]=(s*n-i*o)*v,e[3]=h*v,e[4]=(l*r-i*u)*v,e[5]=(-s*r+i*a)*v,e[6]=d*v,e[7]=(-c*r+n*u)*v,e[8]=(o*r-n*a)*v,e):null},l.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],c=t[7],l=t[8];return e[0]=o*l-s*c,e[1]=i*c-n*l,e[2]=n*s-i*o,e[3]=s*u-a*l,e[4]=r*l-i*u,e[5]=i*a-r*s,e[6]=a*c-o*u,e[7]=n*u-r*c,e[8]=r*o-n*a,e},l.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],c=e[8];return t*(c*a-o*u)+r*(-c*i+o*s)+n*(u*i-a*s)},l.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=r[0],d=r[1],v=r[2],p=r[3],m=r[4],_=r[5],g=r[6],y=r[7],b=r[8];return e[0]=h*n+d*o+v*c,e[1]=h*i+d*s+v*l,e[2]=h*a+d*u+v*f,e[3]=p*n+m*o+_*c,e[4]=p*i+m*s+_*l,e[5]=p*a+m*u+_*f,e[6]=g*n+y*o+b*c,e[7]=g*i+y*s+b*l,e[8]=g*a+y*u+b*f,e},l.mul=l.multiply,l.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=r[0],d=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=h*n+d*o+c,e[7]=h*i+d*s+l,e[8]=h*a+d*u+f,e},l.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=Math.sin(r),d=Math.cos(r);return e[0]=d*n+h*o,e[1]=d*i+h*s,e[2]=d*a+h*u,e[3]=d*o-h*n,e[4]=d*s-h*i,e[5]=d*u-h*a,e[6]=c,e[7]=l,e[8]=f,e},l.scale=function(e,t,r){var n=r[0],i=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},l.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},l.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,c=r*o,l=r*s,f=r*u,h=n*s,d=n*u,v=i*u,p=a*o,m=a*s,_=a*u;return e[0]=1-(h+v),e[3]=l+_,e[6]=f-m,e[1]=l-_,e[4]=1-(c+v),e[7]=d+p,e[2]=f+m,e[5]=d-p,e[8]=1-(c+h),e},l.normalFromMat4=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],c=t[7],l=t[8],f=t[9],h=t[10],d=t[11],v=t[12],p=t[13],m=t[14],_=t[15],g=r*s-n*o,y=r*u-i*o,b=r*c-a*o,x=n*u-i*s,E=n*c-a*s,T=i*c-a*u,w=l*p-f*v,I=l*m-h*v,O=l*_-d*v,R=f*m-h*p,M=f*_-d*p,A=h*_-d*m,P=g*A-y*M+b*R+x*O-E*I+T*w;return P?(P=1/P,e[0]=(s*A-u*M+c*R)*P,e[1]=(u*O-o*A-c*I)*P,e[2]=(o*M-s*O+c*w)*P,e[3]=(i*M-n*A-a*R)*P,e[4]=(r*A-i*O+a*I)*P,e[5]=(n*O-r*M-a*w)*P,e[6]=(p*T-m*E+_*x)*P,e[7]=(m*b-v*T-_*y)*P,e[8]=(v*E-p*b+_*g)*P,e):null},l.str=function(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"},e!==void 0&&(e.mat3=l);var f={};f.create=function(){var e=new r(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.clone=function(e){var t=new r(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},f.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],c=t[7],l=t[8],f=t[9],h=t[10],d=t[11],v=t[12],p=t[13],m=t[14],_=t[15],g=r*s-n*o,y=r*u-i*o,b=r*c-a*o,x=n*u-i*s,E=n*c-a*s,T=i*c-a*u,w=l*p-f*v,I=l*m-h*v,O=l*_-d*v,R=f*m-h*p,M=f*_-d*p,A=h*_-d*m,P=g*A-y*M+b*R+x*O-E*I+T*w;return P?(P=1/P,e[0]=(s*A-u*M+c*R)*P,e[1]=(i*M-n*A-a*R)*P,e[2]=(p*T-m*E+_*x)*P,e[3]=(h*E-f*T-d*x)*P,e[4]=(u*O-o*A-c*I)*P,e[5]=(r*A-i*O+a*I)*P,e[6]=(m*b-v*T-_*y)*P,e[7]=(l*T-h*b+d*y)*P,e[8]=(o*M-s*O+c*w)*P,e[9]=(n*O-r*M-a*w)*P,e[10]=(v*E-p*b+_*g)*P,e[11]=(f*b-l*E-d*g)*P,e[12]=(s*I-o*R-u*w)*P,e[13]=(r*R-n*I+i*w)*P,e[14]=(p*y-v*x-m*g)*P,e[15]=(l*x-f*y+h*g)*P,e):null},f.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],c=t[7],l=t[8],f=t[9],h=t[10],d=t[11],v=t[12],p=t[13],m=t[14],_=t[15];return e[0]=s*(h*_-d*m)-f*(u*_-c*m)+p*(u*d-c*h),e[1]=-(n*(h*_-d*m)-f*(i*_-a*m)+p*(i*d-a*h)),e[2]=n*(u*_-c*m)-s*(i*_-a*m)+p*(i*c-a*u),e[3]=-(n*(u*d-c*h)-s*(i*d-a*h)+f*(i*c-a*u)),e[4]=-(o*(h*_-d*m)-l*(u*_-c*m)+v*(u*d-c*h)),e[5]=r*(h*_-d*m)-l*(i*_-a*m)+v*(i*d-a*h),e[6]=-(r*(u*_-c*m)-o*(i*_-a*m)+v*(i*c-a*u)),e[7]=r*(u*d-c*h)-o*(i*d-a*h)+l*(i*c-a*u),e[8]=o*(f*_-d*p)-l*(s*_-c*p)+v*(s*d-c*f),e[9]=-(r*(f*_-d*p)-l*(n*_-a*p)+v*(n*d-a*f)),e[10]=r*(s*_-c*p)-o*(n*_-a*p)+v*(n*c-a*s),e[11]=-(r*(s*d-c*f)-o*(n*d-a*f)+l*(n*c-a*s)),e[12]=-(o*(f*m-h*p)-l*(s*m-u*p)+v*(s*h-u*f)),e[13]=r*(f*m-h*p)-l*(n*m-i*p)+v*(n*h-i*f),e[14]=-(r*(s*m-u*p)-o*(n*m-i*p)+v*(n*u-i*s)),e[15]=r*(s*h-u*f)-o*(n*h-i*f)+l*(n*u-i*s),e},f.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],c=e[8],l=e[9],f=e[10],h=e[11],d=e[12],v=e[13],p=e[14],m=e[15],_=t*o-r*a,g=t*s-n*a,y=t*u-i*a,b=r*s-n*o,x=r*u-i*o,E=n*u-i*s,T=c*v-l*d,w=c*p-f*d,I=c*m-h*d,O=l*p-f*v,R=l*m-h*v,M=f*m-h*p;return _*M-g*R+y*O+b*I-x*w+E*T},f.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=t[9],d=t[10],v=t[11],p=t[12],m=t[13],_=t[14],g=t[15],y=r[0],b=r[1],x=r[2],E=r[3];return e[0]=y*n+b*s+x*f+E*p,e[1]=y*i+b*u+x*h+E*m,e[2]=y*a+b*c+x*d+E*_,e[3]=y*o+b*l+x*v+E*g,y=r[4],b=r[5],x=r[6],E=r[7],e[4]=y*n+b*s+x*f+E*p,e[5]=y*i+b*u+x*h+E*m,e[6]=y*a+b*c+x*d+E*_,e[7]=y*o+b*l+x*v+E*g,y=r[8],b=r[9],x=r[10],E=r[11],e[8]=y*n+b*s+x*f+E*p,e[9]=y*i+b*u+x*h+E*m,e[10]=y*a+b*c+x*d+E*_,e[11]=y*o+b*l+x*v+E*g,y=r[12],b=r[13],x=r[14],E=r[15],e[12]=y*n+b*s+x*f+E*p,e[13]=y*i+b*u+x*h+E*m,e[14]=y*a+b*c+x*d+E*_,e[15]=y*o+b*l+x*v+E*g,e},f.mul=f.multiply,f.translate=function(e,t,r){var n,i,a,o,s,u,c,l,f,h,d,v,p=r[0],m=r[1],_=r[2];return t===e?(e[12]=t[0]*p+t[4]*m+t[8]*_+t[12],e[13]=t[1]*p+t[5]*m+t[9]*_+t[13],e[14]=t[2]*p+t[6]*m+t[10]*_+t[14],e[15]=t[3]*p+t[7]*m+t[11]*_+t[15]):(n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=t[9],d=t[10],v=t[11],e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=c,e[7]=l,e[8]=f,e[9]=h,e[10]=d,e[11]=v,e[12]=n*p+s*m+f*_+t[12],e[13]=i*p+u*m+h*_+t[13],e[14]=a*p+c*m+d*_+t[14],e[15]=o*p+l*m+v*_+t[15]),e},f.scale=function(e,t,r){var n=r[0],i=r[1],a=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.rotate=function(e,r,n,i){var a,o,s,u,c,l,f,h,d,v,p,m,_,g,y,b,x,E,T,w,I,O,R,M,A=i[0],P=i[1],N=i[2],D=Math.sqrt(A*A+P*P+N*N);return t>Math.abs(D)?null:(D=1/D,A*=D,P*=D,N*=D,a=Math.sin(n),o=Math.cos(n),s=1-o,u=r[0],c=r[1],l=r[2],f=r[3],h=r[4],d=r[5],v=r[6],p=r[7],m=r[8],_=r[9],g=r[10],y=r[11],b=A*A*s+o,x=P*A*s+N*a,E=N*A*s-P*a,T=A*P*s-N*a,w=P*P*s+o,I=N*P*s+A*a,O=A*N*s+P*a,R=P*N*s-A*a,M=N*N*s+o,e[0]=u*b+h*x+m*E,e[1]=c*b+d*x+_*E,e[2]=l*b+v*x+g*E,e[3]=f*b+p*x+y*E,e[4]=u*T+h*w+m*I,e[5]=c*T+d*w+_*I,e[6]=l*T+v*w+g*I,e[7]=f*T+p*w+y*I,e[8]=u*O+h*R+m*M,e[9]=c*O+d*R+_*M,e[10]=l*O+v*R+g*M,e[11]=f*O+p*R+y*M,r!==e&&(e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e)},f.rotateX=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[4],o=t[5],s=t[6],u=t[7],c=t[8],l=t[9],f=t[10],h=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+c*n,e[5]=o*i+l*n,e[6]=s*i+f*n,e[7]=u*i+h*n,e[8]=c*i-a*n,e[9]=l*i-o*n,e[10]=f*i-s*n,e[11]=h*i-u*n,e},f.rotateY=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],c=t[8],l=t[9],f=t[10],h=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-c*n,e[1]=o*i-l*n,e[2]=s*i-f*n,e[3]=u*i-h*n,e[8]=a*n+c*i,e[9]=o*n+l*i,e[10]=s*n+f*i,e[11]=u*n+h*i,e},f.rotateZ=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],c=t[4],l=t[5],f=t[6],h=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+c*n,e[1]=o*i+l*n,e[2]=s*i+f*n,e[3]=u*i+h*n,e[4]=c*i-a*n,e[5]=l*i-o*n,e[6]=f*i-s*n,e[7]=h*i-u*n,e},f.fromRotationTranslation=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=n+n,u=i+i,c=a+a,l=n*s,f=n*u,h=n*c,d=i*u,v=i*c,p=a*c,m=o*s,_=o*u,g=o*c;return e[0]=1-(d+p),e[1]=f+g,e[2]=h-_,e[3]=0,e[4]=f-g,e[5]=1-(l+p),e[6]=v+m,e[7]=0,e[8]=h+_,e[9]=v-m,e[10]=1-(l+d),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e},f.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,c=r*o,l=r*s,f=r*u,h=n*s,d=n*u,v=i*u,p=a*o,m=a*s,_=a*u;return e[0]=1-(h+v),e[1]=l+_,e[2]=f-m,e[3]=0,e[4]=l-_,e[5]=1-(c+v),e[6]=d+p,e[7]=0,e[8]=f+m,e[9]=d-p,e[10]=1-(c+h),e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.frustum=function(e,t,r,n,i,a,o){var s=1/(r-t),u=1/(i-n),c=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*u,e[6]=0,e[7]=0,e[8]=(r+t)*s,e[9]=(i+n)*u,e[10]=(o+a)*c,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*o*a*c,e[15]=0,e},f.perspective=function(e,t,r,n,i){var a=1/Math.tan(t/2),o=1/(n-i);return e[0]=a/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(i+n)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*i*n*o,e[15]=0,e},f.ortho=function(e,t,r,n,i,a,o){var s=1/(t-r),u=1/(n-i),c=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*u,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*c,e[11]=0,e[12]=(t+r)*s,e[13]=(i+n)*u,e[14]=(o+a)*c,e[15]=1,e},f.lookAt=function(e,r,n,i){var a,o,s,u,c,l,h,d,v,p,m=r[0],_=r[1],g=r[2],y=i[0],b=i[1],x=i[2],E=n[0],T=n[1],w=n[2];return t>Math.abs(m-E)&&t>Math.abs(_-T)&&t>Math.abs(g-w)?f.identity(e):(h=m-E,d=_-T,v=g-w,p=1/Math.sqrt(h*h+d*d+v*v),h*=p,d*=p,v*=p,a=b*v-x*d,o=x*h-y*v,s=y*d-b*h,p=Math.sqrt(a*a+o*o+s*s),p?(p=1/p,a*=p,o*=p,s*=p):(a=0,o=0,s=0),u=d*s-v*o,c=v*a-h*s,l=h*o-d*a,p=Math.sqrt(u*u+c*c+l*l),p?(p=1/p,u*=p,c*=p,l*=p):(u=0,c=0,l=0),e[0]=a,e[1]=u,e[2]=h,e[3]=0,e[4]=o,e[5]=c,e[6]=d,e[7]=0,e[8]=s,e[9]=l,e[10]=v,e[11]=0,e[12]=-(a*m+o*_+s*g),e[13]=-(u*m+c*_+l*g),e[14]=-(h*m+d*_+v*g),e[15]=1,e)},f.str=function(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"},e!==void 0&&(e.mat4=f);var h={};h.create=function(){var e=new r(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},h.rotationTo=function(){var e=o.create(),t=o.fromValues(1,0,0),r=o.fromValues(0,1,0);return function(n,i,a){var s=o.dot(i,a);return-.999999>s?(o.cross(e,t,i),1e-6>o.length(e)&&o.cross(e,r,i),o.normalize(e,e),h.setAxisAngle(n,e,Math.PI),n):s>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(o.cross(e,i,a),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+s,h.normalize(n,n))}}(),h.setAxes=function(){var e=l.create();return function(t,r,n,i){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=i[0],e[4]=i[1],e[7]=i[2],e[2]=r[0],e[5]=r[1],e[8]=r[2],h.normalize(t,h.fromMat3(t,e))}}(),h.clone=s.clone,h.fromValues=s.fromValues,h.copy=s.copy,h.set=s.set,h.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},h.setAxisAngle=function(e,t,r){r*=.5;var n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e},h.add=s.add,h.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],c=r[2],l=r[3];return e[0]=n*l+o*s+i*c-a*u,e[1]=i*l+o*u+a*s-n*c,e[2]=a*l+o*c+n*u-i*s,e[3]=o*l-n*s-i*u-a*c,e},h.mul=h.multiply,h.scale=s.scale,h.rotateX=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+o*s,e[1]=i*u+a*s,e[2]=a*u-i*s,e[3]=o*u-n*s,e},h.rotateY=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u-a*s,e[1]=i*u+o*s,e[2]=a*u+n*s,e[3]=o*u-i*s,e},h.rotateZ=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+i*s,e[1]=i*u-n*s,e[2]=a*u+o*s,e[3]=o*u-a*s,e},h.calculateW=function(e,t){var r=t[0],n=t[1],i=t[2];return e[0]=r,e[1]=n,e[2]=i,e[3]=-Math.sqrt(Math.abs(1-r*r-n*n-i*i)),e},h.dot=s.dot,h.lerp=s.lerp,h.slerp=function(e,t,r,n){var i,a,o,s,u,c=t[0],l=t[1],f=t[2],h=t[3],d=r[0],v=r[1],p=r[2],m=r[3];return a=c*d+l*v+f*p+h*m,0>a&&(a=-a,d=-d,v=-v,p=-p,m=-m),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,u=Math.sin(n*i)/o):(s=1-n,u=n),e[0]=s*c+u*d,e[1]=s*l+u*v,e[2]=s*f+u*p,e[3]=s*h+u*m,e},h.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return e[0]=-r*s,e[1]=-n*s,e[2]=-i*s,e[3]=a*s,e},h.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},h.length=s.length,h.len=h.length,h.squaredLength=s.squaredLength,h.sqrLen=h.squaredLength,h.normalize=s.normalize,h.fromMat3=function(){var e="undefined"!=typeof Int8Array?new Int8Array([1,2,0]):[1,2,0];return function(t,r){var n,i=r[0]+r[4]+r[8];if(i>0)n=Math.sqrt(i+1),t[3]=.5*n,n=.5/n,t[0]=(r[7]-r[5])*n,t[1]=(r[2]-r[6])*n,t[2]=(r[3]-r[1])*n;else{var a=0;r[4]>r[0]&&(a=1),r[8]>r[3*a+a]&&(a=2);var o=e[a],s=e[o];n=Math.sqrt(r[3*a+a]-r[3*o+o]-r[3*s+s]+1),t[a]=.5*n,n=.5/n,t[3]=(r[3*s+o]-r[3*o+s])*n,t[o]=(r[3*o+a]+r[3*a+o])*n,t[s]=(r[3*s+a]+r[3*a+s])*n}return t}}(),h.str=function(e){return"quat("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},e!==void 0&&(e.quat=h)}(t.exports)}(this),n("core/vector3",["require","glmatrix"],function(e){var t=e("glmatrix"),r=t.vec3,n=function(e,t,n){return e=e||0,t=t||0,n=n||0,Object.create(i,{x:{configurable:!1,set:function(e){this._array[0]=e,this._dirty=!0},get:function(){return this._array[0]}},y:{configurable:!1,set:function(e){this._array[1]=e,this._dirty=!0},get:function(){return this._array[1]}},z:{configurable:!1,set:function(e){this._array[2]=e,this._dirty=!0},get:function(){return this._array[2]}},_array:{writable:!1,configurable:!1,value:r.fromValues(e,t,n)},_dirty:{configurable:!1,value:!0}})},i={constructor:n,add:function(e){return r.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,r){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._dirty=!0,this},clone:function(){return new n(this.x,this.y,this.z)},copy:function(e){return r.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return r.cross(e._array,this._array,t._array),this},dist:function(e){return r.dist(this._array,e._array)},distance:function(e){return r.distance(this._array,e._array)},div:function(e){return r.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return r.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return r.dot(this._array,e._array)},len:function(){return r.len(this._array)},length:function(){return r.length(this._array)},lerp:function(e,t,n){return r.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},mul:function(e){return r.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return r.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return r.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return r.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return r.random(this._array,e),this._dirty=!0,this},scale:function(e){return r.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return r.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return r.sqrDist(this._array,e._array)},squaredDistance:function(e){return r.squaredDistance(this._array,e._array)},sqrLen:function(){return r.sqrLen(this._array)},squaredLength:function(){return r.squaredLength(this._array)},sub:function(e){return r.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return r.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat3:function(e){return r.transformMat3(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return r.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return r.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},setEulerFromQuaternion:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};return n}),n("core/quaternion",["require","glmatrix"],function(e){var t=e("glmatrix"),r=t.quat,n=function(e,t,n,a){return e=e||0,t=t||0,n=n||0,a=a===void 0?1:a,Object.create(i,{x:{configurable:!1,set:function(e){this._array[0]=e,this._dirty=!0},get:function(){return this._array[0]}},y:{configurable:!1,set:function(e){this._array[1]=e,this._dirty=!0},get:function(){return this._array[1]}},z:{configurable:!1,set:function(e){this._array[2]=e,this._dirty=!0},get:function(){return this._array[2]}},w:{configurable:!1,set:function(e){this._array[2]=e,this._dirty=!0},get:function(){return this._array[2]}},_array:{writable:!1,configurable:!1,value:r.fromValues(e,t,n,a)},_dirty:{configurable:!1,value:!1}})},i={constructor:n,add:function(e){return r.add(this._array,this._array,e._array),this._dirty=!0,this},calculateW:function(){return r.calculateW(this._array,this._array),this._dirty=!0,this},set:function(e,t,r,n){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},clone:function(){return new n(this.x,this.y,this.z,this.w)},conjugate:function(){return r.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(e){return r.copy(this._array,e._array),this._dirty=!0,this},dot:function(e){return r.dot(this._array,e._array)},fromMat3:function(e){return r.fromMat3(this._array,e._array),this._dirty=!0,this},fromMat4:function(){var e=t.mat3,n=e.create();return function(t){return e.fromMat4(n,t._array),e.transpose(n,n),r.fromMat3(this._array,n),this._dirty=!0,this}}(),identity:function(){return r.identity(this._array),this._dirty=!0,this},invert:function(){return r.invert(this._array,this._array),this._dirty=!0,this},len:function(){return r.len(this._array)},length:function(){return r.length(this._array)},lerp:function(e,t,n){return r.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},mul:function(e){return r.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return r.multiply(this._array,this._array,e._array),this._dirty=!0,this},normalize:function(){return r.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(e){return r.rotateX(this._array,this._array,e),this._dirty=!0,this},rotateY:function(e){return r.rotateY(this._array,this._array,e),this._dirty=!0,this},rotateZ:function(e){return r.rotateZ(this._array,this._array,e),this._dirty=!0,this},setAxisAngle:function(e,t){return r.setAxisAngle(this._array,e._array,t),this._dirty=!0,this},slerp:function(e,t,n){return r.slerp(this._array,e._array,t._array,n),this._dirty=!0,this},sqrLen:function(){return r.sqrLen(this._array)},squaredLength:function(){return r.squaredLength(this._array)},setFromEuler:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};return n}),n("core/matrix4",["require","glmatrix","./vector3"],function(e){function t(e){return{configurable:!1,set:function(t){this._array[e]=t,this._dirty=!0},get:function(){return this._array[e]}}}var r=e("glmatrix"),n=e("./vector3"),i=r.mat4,a=r.vec3,o=r.mat3,s=r.quat,u=function(){var e=new n,r=new n,a=new n;return Object.create(c,{m00:t(0),m01:t(1),m02:t(2),m03:t(3),m10:t(4),m11:t(5),m12:t(6),m13:t(7),m20:t(8),m21:t(9),m22:t(10),m23:t(11),m30:t(12),m31:t(13),m32:t(14),m33:t(15),forward:{configurable:!1,get:function(){var e=this._array;return a.set(e[8],e[9],e[10]),a},set:function(e){var t=this._array,e=e._array;t[8]=e[8],t[9]=e[9],t[10]=e[10]}},up:{configurable:!1,enumerable:!0,get:function(){var e=this._array;return r.set(e[4],e[5],e[6]),r},set:function(e){var t=this._array,e=e._array;t[4]=e[4],t[5]=e[5],t[6]=e[6]}},right:{configurable:!1,get:function(){var t=this._array;return e.set(t[0],t[1],t[2]),e},set:function(e){var t=this._array,e=e._array;t[0]=e[0],t[1]=e[1],t[2]=e[2]}},_array:{writable:!1,configurable:!1,value:i.create()}})},c={constructor:u,adjoint:function(){return i.adjoint(this._array,this._array),this},clone:function(){return(new u).copy(this)},copy:function(e){return i.copy(this._array,e._array),this},determinant:function(){return i.determinant(this._array)},fromQuat:function(e){return i.fromQuat(this._array,e._array),this},fromRotationTranslation:function(e,t){return i.fromRotationTranslation(this._array,e._array,t._array),this},frustum:function(e,t,r,n,a,o){return i.frustum(this._array,e,t,r,n,a,o),this},identity:function(){return i.identity(this._array),this},invert:function(){return i.invert(this._array,this._array),this},lookAt:function(e,t,r){return i.lookAt(this._array,e._array,t._array,r._array),this},mul:function(e){return i.mul(this._array,this._array,e._array),this},mulLeft:function(e){return i.mul(this._array,e._array,this._array),this},multiply:function(e){return i.multiply(this._array,this._array,e._array),this},multiplyLeft:function(e){return i.multiply(this._array,e._array,this._array),this},ortho:function(e,t,r,n,a,o){return i.ortho(this._array,e,t,r,n,a,o),this},perspective:function(e,t,r,n){return i.perspective(this._array,e,t,r,n),this},rotate:function(e,t){return i.rotate(this._array,this._array,e,t._array),this},rotateX:function(e){return i.rotateX(this._array,this._array,e),this},rotateY:function(e){return i.rotateY(this._array,this._array,e),this},rotateZ:function(e){return i.rotateZ(this._array,this._array,e),this},scale:function(e){return i.scale(this._array,this._array,e._array),this},translate:function(e){return i.translate(this._array,this._array,e._array),this},transpose:function(){return i.transpose(this._array,this._array),this},rotateAround:function(){console.warn("TODO")},decomposeMatrix:function(){var e=a.create(),t=a.create(),r=a.create(),n=o.create();return function(i,u,c){var l=this._array;a.set(e,l[0],l[1],l[2]),a.set(t,l[4],l[5],l[6]),a.set(r,l[8],l[9],l[10]),i.x=a.length(e),i.y=a.length(t),i.z=a.length(r),c.set(l[12],l[13],l[14]),o.fromMat4(n,l),o.transpose(n,n),n[0]/=i.x,n[1]/=i.x,n[2]/=i.x,n[3]/=i.y,n[4]/=i.y,n[5]/=i.y,n[6]/=i.z,n[7]/=i.z,n[8]/=i.z,s.fromMat3(u._array,n),u.normalize()}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};return u}),n("core/matrix3",["require","glmatrix"],function(e){function t(e){return{configurable:!1,set:function(t){this._array[e]=t,this._dirty=!0},get:function(){return this._array[e]}}}var r=e("glmatrix"),n=r.mat3,i=function(){return Object.create(a,{m00:t(0),m01:t(1),m02:t(2),m10:t(3),m11:t(4),m12:t(5),m20:t(6),m21:t(7),m22:t(8),_array:{writable:!1,configurable:!1,value:n.create()}})},a={constructor:i,adjoint:function(){return n.adjoint(this._array,this._array),this},clone:function(){return(new i).copy(this)},copy:function(e){return n.copy(this._array,e._array),this},determinant:function(){return n.determinant(this._array)},fromMat2d:function(e){return n.fromMat2d(this._array,e._array)},fromMat4:function(e){return n.fromMat4(this._array,e._array)},fromQuat:function(e){return n.fromQuat(this._array,e._array),this},identity:function(){return n.identity(this._array),this},invert:function(){return n.invert(this._array,this._array),this},mul:function(e){return n.mul(this._array,this._array,e._array),this},mulLeft:function(e){return n.mul(this._array,e._array,this._array),this},multiply:function(e){return n.multiply(this._array,this._array,e._array),this},multiplyLeft:function(e){return n.multiply(this._array,e._array,this._array),this},normalFromMat4:function(e){return n.normalFromMat4(this._array,e._array),e},transpose:function(){return n.transpose(this._array,this._array),this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};return i}),n("util/util",["require"],function(){return{genGUID:function(){var e=0;return function(){return++e}}()}}),n("3d/node",["require","core/base","core/vector3","core/quaternion","core/matrix4","core/matrix3","util/util","_"],function(e){var t=e("core/base"),r=e("core/vector3"),n=e("core/quaternion"),i=e("core/matrix4");e("core/matrix3");var a=e("util/util"),o=e("_"),s=t.derive(function(){var e=a.genGUID();return{__GUID__:e,name:"NODE_"+e,visible:!0,position:new r,rotation:new n,scale:new r(1,1,1),eulerAngle:new r,useEuler:!1,children:[],parent:null,worldMatrix:new i,matrix:new i}},{add:function(e){this.children.indexOf(e)>=0||(this.children.push(e),e.parent=this)},remove:function(e){o.without(this.children,e),e.parent=null},traverse:function(e){var t=e&&e(this);if(!t)for(var r=this.children,n=0,i=r.length;i>n;n++)r[n].traverse(e)},updateMatrix:function(){if(!this.position._dirty&&!this.scale._dirty){if(this.useEuler&&!this.eulerAngle._dirty)return;if(!this.rotation._dirty)return}var e=this.matrix;e.identity(),this.useEuler&&(this.rotation.identity(),this.rotation.rotateX(this.eulerAngle.x),this.rotation.rotateY(this.eulerAngle.y),this.rotation.rotateZ(this.eulerAngle.z)),e.fromRotationTranslation(this.rotation,this.position),e.scale(this.scale),this.rotation._dirty=!1,this.scale._dirty=!1,this.position._dirty=!1,this.eulerAngle._dirty=!1},decomposeMatrix:function(){this.matrix.decomposeMatrix(this.scale,this.rotation,this.position),this.useEuler||this.eulerAngle.setEulerFromQuaternion(this.rotation),this.rotation._dirty=!1,this.scale._dirty=!1,this.position._dirty=!1,this.eulerAngle._dirty=!1},updateWorldMatrix:function(){this.updateMatrix(),this.parent?this.worldMatrix.copy(this.parent.worldMatrix).multiply(this.matrix):this.worldMatrix.copy(this.matrix)
},update:function(e,t){t||this.trigger("beforeupdate",e),this.updateWorldMatrix(),t||this.trigger("afterupdate",e);for(var r=0;this.children.length>r;r++){var n=this.children[r];n.visible&&n.update(e)}},getWorldPosition:function(){var e=this.worldMatrix._array;return new r(e[12],e[13],e[14])},translate:function(e){this.updateMatrix(),this.translate(e),this.decomposeMatrix()},rotate:function(e,t){this.updateMatrix(),this.matrix.rotate(e,t),this.decomposeMatrix()},rotateAround:function(){var e=new r,t=new i;return function(r,n,i){e.copy(this.position).subtract(r),this.matrix.identity(),this.matrix.translate(r),this.matrix.rotate(i,n),this.useEuler&&(this.rotation.identity(),this.rotation.rotateX(this.eulerAngle.x),this.rotation.rotateY(this.eulerAngle.y),this.rotation.rotateZ(this.eulerAngle.z)),t.fromRotationTranslation(this.rotation,e),this.matrix.multiply(t),this.matrix.scale(this.scale),this.decomposeMatrix()}}(),lookAt:function(){var e=new i,t=new r;return function(r,n){e.lookAt(this.position,r,n||this.matrix.up).invert(),e.decomposeMatrix(t,this.rotation,this.position)}}()});return s}),n("3d/camera",["require","./node","core/matrix4"],function(e){var t=e("./node"),r=e("core/matrix4"),n=t.derive(function(){return{projectionMatrix:new r}},function(){this.update()},{update:function(e){t.prototype.update.call(this,e),this.updateProjectionMatrix()}});return n}),n("3d/camera/orthographic",["require","../camera"],function(e){var t=e("../camera"),r=t.derive(function(){return{left:-1,right:1,near:0,far:1,top:1,bottom:-1}},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)}});return r}),n("3d/camera/perspective",["require","../camera"],function(e){var t=e("../camera"),r=t.derive(function(){return{fov:50,aspect:1,near:.1,far:2e3}},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)}});return r}),n("3d/compositor/graph/graph",["require","core/base","_"],function(e){var t=e("core/base"),r=e("_"),n=t.derive(function(){return{nodes:[]}},{add:function(e){this.nodes.push(e),this.dirty("graph")},remove:function(e){r.without(this.nodes,e),this.dirty("graph")},update:function(){for(var e=0;this.nodes.length>e;e++)this.nodes[e].clear();for(var e=0;this.nodes.length>e;e++){var t=this.nodes[e];if(t.inputs)for(var r in t.inputs){var n=t.inputs[r],i=this.findPin(n);i?t.link(r,i.node,i.pin):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}}},findPin:function(e){var t;if("string"==typeof e.node)for(var r=0;this.nodes.length>r;r++){var n=this.nodes[r];n.name===e.node&&(t=n)}else t=e.node;return t&&t.outputs[e.pin]?{node:t,pin:e.pin}:void 0},fromJSON:function(){}});return n}),n("3d/compositor",["require","./compositor/graph/graph"],function(e){var t=e("./compositor/graph/graph"),r=t.derive(function(){return{}},{render:function(e){this.isDirty("graph")&&(this.update(),this.fresh("graph"));for(var t=0;this.nodes.length>t;t++){var r=this.nodes[t];r.outputs||r.render(e),r.updateReference()}}});return r}),n("3d/scene",["require","./node"],function(e){var t=e("./node"),r=t.derive(function(){return{material:null,lightNumber:{},lightUniforms:{},filter:null}},{});return r}),n("3d/geometry",["require","core/base","util/util","glmatrix","_"],function(e){var t=e("core/base"),r=e("util/util"),n=e("glmatrix"),i=n.vec3;n.vec2,n.mat2;var a=n.mat4;e("_");var o=Array.prototype.slice,s=t.derive(function(){return{__GUID__:r.genGUID(),attributes:{position:{type:"float",semantic:"POSITION",size:3,value:[]},texcoord0:{type:"float",semantic:"TEXCOORD_0",size:2,value:[]},texcoord1:{type:"float",semantic:"TEXCOORD_1",size:2,value:[]},normal:{type:"float",semantic:"NORMAL",size:3,value:[]},tangent:{type:"float",semantic:"TANGENT",size:4,value:[]},color:{type:"float",semantic:"COLOR",size:3,value:[]},barycentric:{type:"float",size:3,value:[]},boneWeight:{type:"float",size:3,value:[]},boneIndex:{type:"float",size:4,value:[]}},useFaces:!0,faces:[],hint:"STATIC_DRAW",chunkSize:65535,_enabledAttributes:null,_verticesNumber:0,_normalType:"vertex",_arrayChunks:[],_verticesReorganizedMap:[],_reorganizedFaces:[]}},{dirty:function(e){if(e){for(var t in this.cache._caches)this.cache._caches[t]["dirty_"+e]=!0;this._enabledAttributes=null}else{this.dirty("indices");for(var r in this.attributes)this.dirty(r)}},getVerticesNumber:function(){return this._verticesNumber=this.attributes.position.value.length,this._verticesNumber},getEnabledAttributes:function(){if(this._enabledAttributes)return this._enabledAttributes;var e={},t=this.getVerticesNumber();for(var r in this.attributes){var n=this.attributes[r];n.value&&n.value.length&&n.value.length===t&&(e[r]=n)}return this._enabledAttributes=e,e},getDirtyAttributes:function(){var e={},t=this.getEnabledAttributes(),r=!0;for(var n in t)t[n],(this.cache.get("dirty_"+n)||this.cache.miss("dirty_"+n))&&(e[n]=t[n],r=!1);return r?void 0:e},getChunkNumber:function(){return this._arrayChunks.length},getBufferChunks:function(e){this.cache.use(e.__GUID__);var t=this.cache.getContext(),r=this.getDirtyAttributes(),n=this.cache.get("dirty_faces")||this.cache.miss("dirty_faces");if(r){this._updateAttributesAndIndicesArrays(r,n),this._updateBuffer(e,r,n);for(var i in r)t["dirty_"+i]=!1}return this.cache.get("chunks")},_updateAttributesAndIndicesArrays:function(e,t){var r=this,n={},i=this.getVerticesNumber(),a=this._verticesReorganizedMap,o={};for(var s in e){switch(U){case"byte":o[s]=Int8Array;break;case"ubyte":o[s]=Uint8Array;break;case"short":o[s]=Int16Array;break;case"ushort":o[s]=Uint16Array;break;default:o[s]=Float32Array}n[s]=0}var u=function(t){if(r._arrayChunks[t])return r._arrayChunks[t];var o={attributeArrays:{},indicesArray:null};for(var s in e)o.attributeArrays[s]=null;for(var s in n)n[s]=0;for(var u=0;i>u;u++)a[u]=-1;return r._arrayChunks.push(o),o},c=Object.keys(e);if(i>this.chunkSize&&this.useFaces){var l,f=0,h=0,d=[0],v=[];for(p=0;i>p;p++)v[p]=-1,a[p]=-1;if(t&&this._reorganizedFaces.length!==this.faces.length)for(p=0;this.faces.length>p;p++)this._reorganizedFaces[p]=[0,0,0];l=u(h);for(var p=0;this.faces.length>p;p++){var m=this.faces[p],_=this._reorganizedFaces[p],g=m[0],y=m[1],b=m[2];f+3>this.chunkSize&&(h++,d[h]=p,f=0,l=u(h));for(var x=-1===a[g],E=-1===a[y],T=-1===a[b],w=0;c.length>w;w++){var s=c[w],I=l.attributeArrays[s],O=e[s].value,R=e[s].size;if(I||(I=l.attributeArrays[s]=[]),1===R)x&&(I[n[s]++]=O[g]),E&&(I[n[s]++]=O[y]),T&&(I[n[s]++]=O[b]);else{if(x)for(var M=0;R>M;M++)I[n[s]++]=O[g][M];if(E)for(var M=0;R>M;M++)I[n[s]++]=O[y][M];if(T)for(var M=0;R>M;M++)I[n[s]++]=O[b][M]}}x?(a[g]=f,_[0]=f,f++):_[0]=a[g],E?(a[y]=f,_[1]=f,f++):_[1]=a[y],T?(a[b]=f,_[2]=f,f++):_[2]=a[b]}for(var A=0;this._arrayChunks.length>A;A++){var P=this._arrayChunks[A];for(var s in P.attributeArrays){var N=P.attributeArrays[s];N instanceof Array&&(P.attributeArrays[s]=new o[s](N))}}if(t)for(var D,S,L,P,A=0;this._arrayChunks.length>A;A++){D=d[A],S=d[A+1]||this.faces.length,L=0,P=this._arrayChunks[A];var C=P.indicesArray;C||(C=P.indicesArray=new Uint16Array(3*(S-D)));for(var p=D;S>p;p++)C[L++]=this._reorganizedFaces[p][0],C[L++]=this._reorganizedFaces[p][1],C[L++]=this._reorganizedFaces[p][2]}}else{var P=u(0);if(this.useFaces){var C=P.indicesArray;C||(C=P.indicesArray=new Uint16Array(3*this.faces.length));for(var L=0,p=0;this.faces.length>p;p++)C[L++]=this.faces[p][0],C[L++]=this.faces[p][1],C[L++]=this.faces[p][2]}for(var s in e){var O=e[s].value,U=e[s].type,R=e[s].size,I=P.attributeArrays[s];if(I||(I=P.attributeArrays[s]=new o[s](i*R)),1===R)for(var p=0;O.length>p;p++)I[p]=O[p];else for(var L=0,p=0;O.length>p;p++)for(var M=0;R>M;M++)I[L++]=O[p][M]}}},_updateBuffer:function(e,t,r){var n=this.cache.get("chunks");if(!n){n=[];for(var i=0;this._arrayChunks.length>i;i++)n[i]={attributeBuffers:{},indicesBuffer:null};this.cache.put("chunks",n)}for(var i=0;n.length>i;i++){var a=n[i];a||(a=n[i]={attributeBuffers:{},indicesBuffer:null});var o=a.attributeBuffers,s=a.indicesBuffer,u=this._arrayChunks[i],c=u.attributeArrays,l=u.indicesArray;for(var f in t){var h,d=t[f],v=(d.value,d.type),p=d.semantic,m=d.size,_=o[f];h=_?_.buffer:e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,h),e.bufferData(e.ARRAY_BUFFER,c[f],e[this.hint]),o[f]={type:v,buffer:h,size:m,semantic:p}}r&&this.useFaces&&(s||(s=a.indicesBuffer={buffer:e.createBuffer(),count:l.length}),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,s.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,l,e[this.hint]))}},generateVertexNormals:function(){var e=this.faces,t=(e.length,this.attributes.position.value),r=this.attributes.normal.value,n=i.create();v12=i.create(),v23=i.create(),t.length-r.length;for(var a=0;r.length>a;a++)i.set(r[a],0,0,0);for(var a=r.length;t.length>a;a++)r[a]=[0,0,0];for(var o=0;this.faces.length>o;o++){var s=e[o],u=s[0],c=s[1],l=s[2],f=t[u],h=t[c],d=t[l];i.sub(v12,f,h),i.sub(v23,h,d),i.cross(n,v12,v23),i.add(r[u],r[u],n),i.add(r[c],r[c],n),i.add(r[l],r[l],n)}for(var a=0;r.length>a;a++)i.normalize(r[a],r[a]);this._normalType="vertex"},generateFaceNormals:function(){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.faces,t=e.length,r=this.attributes.position.value,n=this.attributes.normal.value,a=i.create();v12=i.create(),v23=i.create();for(var s=n.length===r.length,u=0;t>u;u++){var c=e[u],l=c[0],f=c[1],h=c[2],d=r[l],v=r[f],p=r[h];i.sub(v12,d,v),i.sub(v23,v,p),i.cross(a,v12,v23),s?(i.copy(n[l],a),i.copy(n[f],a),i.copy(n[h],a)):n[l]=n[f]=n[h]=o.call(a)}this._normalType="face"},generateTangents:function(){for(var e=this.attributes.texcoord0.value,t=this.attributes.position.value,r=this.attributes.tangent.value,n=this.attributes.normal.value,a=[],o=[],s=this.getVerticesNumber(),u=0;s>u;u++)a[u]=[0,0,0],o[u]=[0,0,0];for(var c=[0,0,0],l=[0,0,0],u=0;this.faces.length>u;u++){var f=this.faces[u],h=f[0],d=f[1],v=f[2],p=e[h],m=e[d],_=e[v],g=t[h],y=t[d],b=t[v],x=y[0]-g[0],E=b[0]-g[0],T=y[1]-g[1],w=b[1]-g[1],I=y[2]-g[2],O=b[2]-g[2],R=m[0]-p[0],M=_[0]-p[0],A=m[1]-p[1],P=_[1]-p[1],N=1/(R*P-A*M);c[0]=(P*x-A*E)*N,c[1]=(P*T-A*w)*N,c[2]=(P*I-A*O)*N,l[0]=(R*E-M*x)*N,l[1]=(R*w-M*T)*N,l[2]=(R*O-M*I)*N,i.add(a[h],a[h],c),i.add(a[d],a[d],c),i.add(a[v],a[v],c),i.add(o[h],o[h],l),i.add(o[d],o[d],l),i.add(o[v],o[v],l)}for(var D=[0,0,0,0],S=[0,0,0],u=0;s>u;u++){var L=n[u],C=a[u];i.scale(D,L,i.dot(L,C)),i.sub(D,C,D),i.normalize(D,D),i.cross(S,L,C),D[3]=0>i.dot(S,o[u])?-1:1,r[u]=D.slice()}},isUniqueVertex:function(){return this.faces.length&&this.useFaces?this.getVerticesNumber()===3*this.faces.length:!0},generateUniqueVertex:function(){function e(e){for(var t in i){var r=i[t].value,n=r[0].length||1;1===n?r.push(r[e]):r.push(o.call(r[e]))}}for(var t=[],r=0;this.getVerticesNumber()>r;r++)t[r]=0;for(var n=this.getVerticesNumber(),i=this.getEnabledAttributes(),a=this.faces,r=0;a.length>r;r++){var s=a[r],u=s[0],c=s[1],l=s[2];t[u]>0&&(e(u),s[0]=n,n++),t[c]>0&&(e(c),s[1]=n,n++),t[l]>0&&(e(l),s[2]=n,n++),t[u]++,t[c]++,t[l]++}this.dirty()},generateBarycentric:function(){var e=[1,0,0],t=[0,0,1],r=[0,1,0];return function(){this.isUniqueVertex()||this.generateUniqueVertex();var n=this.attributes.barycentric.value;if(n.length!=3*this.faces.length)for(var i,a,o,s,u=0;this.faces.length>u;u++)s=this.faces[u],i=s[0],a=s[1],o=s[2],n[i]=e,n[a]=t,n[o]=r}}(),applyMatrix:function(e){var t=this.attributes.position.value,r=this.attributes.normal.value;e=e._array;for(var n=0;t.length>n;n++)i.transformMat4(t[n],t[n],e);var o=a.create();a.invert(o,e),a.transpose(o,o);for(var n=0;r.length>n;n++)i.transformMat4(r[n],r[n],o)},dispose:function(){}});return s}),n("3d/geometry/plane",["require","../geometry"],function(e){var t=e("../geometry"),r=t.derive(function(){return{widthSegments:1,heightSegments:1}},function(){for(var e=this.heightSegments,t=this.widthSegments,r=this.attributes.position.value,n=this.attributes.texcoord0.value,i=this.attributes.normal.value,a=this.faces,o=0;e>=o;o++)for(var s=o/e,u=0;t>=u;u++){var c=u/t;if(r.push([2*c-1,2*s-1,0]),n&&n.push([c,s]),i&&i.push([0,0,1]),t>u&&e>o){var l=u+o*(t+1);a.push([l,l+1,l+t+1]),a.push([l+t+1,l+1,l+t+2])}}});return r}),n("3d/shader",["require","core/base","glmatrix","util/util","_"],function(e){function t(e){for(var t=e.split("\n"),r=0,n=t.length;n>r;r++)t[r]=r+1+": "+t[r];return t.join("\n")}var r=e("core/base"),n=e("glmatrix"),i=n.mat2;mat3=n.mat3,mat4=n.mat4,util=e("util/util"),_=e("_");var a=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+(\w+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,o=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,s={bool:"1i","int":"1i",sampler2D:"t",samplerCube:"t","float":"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},u={bool:function(){return!0},"int":function(){return 0},"float":function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return new Float32Array(2)},vec3:function(){return new Float32Array(3)},vec4:function(){return new Float32Array(4)},ivec2:function(){return new Int32Array(2)},ivec3:function(){return new Int32Array(3)},ivec4:function(){return new Int32Array(4)},mat2:function(){return i.create()},mat3:function(){return mat3.create()},mat4:function(){return mat4.create()},array:function(){return[]}},c=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],l={},f={},h=r.derive(function(){return{__GUID__:util.genGUID(),vertex:"",fragment:"",precision:"mediump",semantics:{},uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},lightNumber:{},_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_program:null}},function(){this.update()},{setVertex:function(e){this.vertex=e,this.update()},setFragment:function(e){this.fragment=e,this.update()},bind:function(e){this.cache.use(e.__GUID__,{locations:{},attriblocations:{}}),(this.cache.get("dirty")||this.cache.miss("program"))&&(this._buildProgram(e,this._vertexProcessed,this._fragmentProcessed),this.cache.put("dirty",!1)),e.useProgram(this.cache.get("program"))},dirty:function(){for(var e in this.cache._caches){var t=this.cache._caches[e];t.dirty=!0,t.locations={},t.attriblocations={}}},update:function(e){(this.vertex!==this._vertexPrev||this.fragment!==this._fragmentPrev||e)&&(this._parseImport(),this.semantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefine(),this.dirty()},enableTexture:function(e,t){var r=this._textureStatus[e];if(r){var n=r.enabled;if(n)return;r.enabled=!0;var t=t===void 0||!0;t&&this.update()}},enableTexturesAll:function(e){for(var t in this._textureStatus)this._textureStatus[t].enabled=!0;var e=e===void 0||!0;e&&this.update()},disableTexture:function(e,t){var r=this._textureStatus[e];if(r){var n=!r.enabled;if(n)return;r.enabled=!1;var t=t===void 0||!0;t&&this.update()}},disableTexturesAll:function(e,t){for(var e in this._textureStatus)this._textureStatus[e].enabled=!1;var t=t===void 0||!0;t&&this.update()},setUniform:function(e,t,r,n){var i=this.cache.get("program"),a=this.cache.get("locations"),o=a[r];if(null!==o){if(!o){if(o=e.getUniformLocation(i,r),null===o)return a[r]=null,void 0;a[r]=o}switch(t){case"1i":e.uniform1i(o,n);break;case"1f":e.uniform1f(o,n);break;case"1fv":e.uniform1fv(o,n);break;case"1iv":e.uniform1iv(o,n);break;case"2iv":e.uniform2iv(o,n);break;case"2fv":e.uniform2fv(o,n);break;case"3iv":e.uniform3iv(o,n);break;case"3fv":e.uniform3fv(o,n);break;case"4iv":e.uniform4iv(o,n);break;case"4fv":e.uniform4fv(o,n);break;case"2i":e.uniform2i(o,n[0],n[1]);break;case"2f":e.uniform2f(o,n[0],n[1]);break;case"3i":e.uniform3i(o,n[0],n[1],n[2]);break;case"3f":e.uniform3f(o,n[0],n[1],n[2]);break;case"4i":e.uniform4i(o,n[0],n[1],n[2],n[3]);break;case"4f":e.uniform4f(o,n[0],n[1],n[2],n[3]);break;case"m2":e.uniformMatrix2fv(o,!1,n);break;case"m3":e.uniformMatrix3fv(o,!1,n);break;case"m4":e.uniformMatrix4fv(o,!1,n);break;case"m2v":var s=4;case"m3v":var s=9;case"m4v":var s=16;if(n instanceof Array){for(var u=new Float32Array(n.length*s),c=0,l=0;n.length>l;l++)for(var f=n[l],h=0;f.length>h;h++)u[c++]=f[h];e.uniformMatrix4fv(o,!1,u)}else n instanceof Float32Array&&e.uniformMatrix4fv(o,!1,n)}}},enableAttributes:function(e,t){var r=this.cache.get("program"),n=this.cache.get("attriblocations");"string"==typeof t&&(t=Array.prototype.slice.call(arguments,1));var i=f[e.__GUID__];i||(i=f[e.__GUID__]=[]);for(var a in this.attributeTemplates){var o=n[a];if(o===void 0){if(o=e.getAttribLocation(r,a),-1===o)continue;n[a]=o}t.indexOf(a)>=0?i[o]||(e.enableVertexAttribArray(o),i[o]=!0):i[o]&&(e.disableVertexAttribArray(o),i[o]=!1)}},setMeshAttribute:function(e,t,r){var n,i=r.type,a=r.size;switch(i){case"byte":n=e.BYTE;break;case"ubyte":n=e.UNSIGNED_BYTE;break;case"short":n=e.SHORT;break;case"ushort":n=e.UNSIGNED_SHORT;break;default:n=e.FLOAT}var o=this.cache.get("program"),s=this.cache.get("attriblocations"),u=s[t];if(u===void 0){if(u=e.getAttribLocation(o,t),-1===u)return;s[t]=u}e.vertexAttribPointer(u,a,n,!1,0,0)},_parseImport:function(){this._vertexProcessedWithoutDefine=h.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=h.parseImport(this.fragment)},_addDefine:function(){var e=[];_.each(this.lightNumber,function(t,r){t&&e.push("#define "+r.toUpperCase()+"_NUMBER "+t)}),_.each(this._textureStatus,function(t,r){t.enabled&&"vertex"===t.shaderType&&e.push("#define "+r.toUpperCase()+"_ENABLED")}),_.each(this.vertexDefines,function(t,r){null===t?e.push("#define "+r):e.push("#define "+r+" "+(""+t))}),this._vertexProcessed=e.join("\n")+"\n"+this._vertexProcessedWithoutDefine,e=[],_.each(this.lightNumber,function(t,r){t&&e.push("#define "+r+"_NUMBER "+t)}),_.each(this._textureStatus,function(t,r){t.enabled&&"fragment"===t.shaderType&&e.push("#define "+r.toUpperCase()+"_ENABLED")}),_.each(this.fragmentDefines,function(t,r){null===t?e.push("#define "+r):e.push("#define "+r+" "+(""+t))});var t=e.join("\n")+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=["precision",this.precision,"float"].join(" ")+";\n"+t},_parseUniforms:function(){function e(e,i,a,o,l,f){if(i&&a){var h=s[i],d=!0;if(h){if(("sampler2D"===i||"samplerCube"===i)&&(r._textureStatus[a]={enabled:!1,shaderType:n}),o&&(h+="v"),f)if(0>c.indexOf(f))if("unconfigurable"===f)d=!1;else{var v=r._parseDefaultValue(i,f);v?f="":console.warn('Unkown semantic "'+f+'"')}else r.semantics[f]={symbol:a,type:h},d=!1;d&&(t[a]={type:h,value:o?u.array:v||u[i],semantic:f||null})}return["uniform",i,a,o].join(" ")+";\n"}}var t={},r=this,n="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(a,e),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(a,e),this.uniformTemplates=t},_parseDefaultValue:function(e,t){var r=/\[\s*(.*)\s*\]/;{if("vec2"!==e&&"vec3"!==e&&"vec4"!==e)return"bool"===e?function(){return"true"===t.toLowerCase()?!0:!1}:"float"===e?function(){return parseFloat(t)}:void 0;var n=r.exec(t)[1];if(n){var i=n.split(/\s*,\s*/);return function(){return new Float32Array(i)}}}},createUniforms:function(){var e={};return _.each(this.uniformTemplates,function(t,r){e[r]={type:t.type,value:t.value()}}),e},_parseAttributes:function(){function e(e,n,i,a,o){if(n&&i){var s=1;switch(n){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}t[i]={type:"float",size:s,semantic:o||null},o&&(0>c.indexOf(o)?console.warn('Unkown semantic "'+o+'"'):r.semantics[o]={symbol:i,type:n})}return["attribute",n,i].join(" ")+";\n"}var t={},r=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(o,e),this.attributeTemplates=t},_buildProgram:function(e,t,r){this.cache.get("program")&&e.deleteProgram(this.cache.get("program"));var n=e.createProgram();try{var i=this._compileShader(e,"vertex",t),a=this._compileShader(e,"fragment",r);if(e.attachShader(n,i),e.attachShader(n,a),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))throw Error("Could not initialize shader\nVALIDATE_STATUS: "+e.getProgramParameter(n,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]")}catch(o){if(l[this.__GUID__])return;throw l[this.__GUID__]=this,o}e.deleteShader(i),e.deleteShader(a),this.cache.put("program",n)},_compileShader:function(e,r,n){var i=e.createShader("fragment"===r?e.FRAGMENT_SHADER:e.VERTEX_SHADER);if(e.shaderSource(i,n),e.compileShader(i),!e.getShaderParameter(i,e.COMPILE_STATUS))throw Error([e.getShaderInfoLog(i),t(n)].join("\n"));return i},dispose:function(){}}),d=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;h.parseImport=function(e){return e=e.replace(d,function(e,t,r){return p[r]?h.parseImport(p[r]):void 0})};var v=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;h.import=function(e){e.replace(v,function(e,t,r,n){return p[r]=n,n})};var p={};return h.source=function(e){var t=p[e];return t?t:(console.error('Shader "'+e+'" not existed in library'),void 0)},h}),n("3d/texture",["require","core/base","_"],function(e){var t=e("core/base");e("_");var r=t.derive(function(){return{width:512,height:512,type:"UNSIGNED_BYTE",format:"RGBA",wrapS:"CLAMP_TO_EDGE",wrapT:"CLAMP_TO_EDGE",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",generateMipmaps:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,NPOT:!1}},{getWebGLTexture:function(e){return this.cache.use(e.__GUID__),this.cache.miss("webgl_texture")&&(this.cache.put("webgl_texture",e.createTexture()),this.cache.put("dirty",!0)),this.cache.get("dirty")&&(this.update(e),this.cache.put("dirty",!1)),this.cache.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){for(var e in this.cache._caches)this.cache._caches[e].dirty=!0},update:function(){},beforeUpdate:function(e){e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,this.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,this.unpackAlignment),this.fallBack()},fallBack:function(){var e=this.isPowerOfTwo();"DEPTH_COMPONENT"===this.format&&(this.generateMipmaps=!1),e&&this.generateMipmaps?(this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter=0==this.minFilter.indexOf("NEAREST")?"NEAREST":"LINEAR",this.magFilter=0==this.magFilter.indexOf("NEAREST")?"NEAREST":"LINEAR",this.wrapS="CLAMP_TO_EDGE",this.wrapT="CLAMP_TO_EDGE")},nextHighestPowerOfTwo:function(e){--e;for(var t=1;32>t;t<<=1)e|=e>>t;return e+1},dispose:function(e){this.cache.use(e.__GUID__),e.deleteTexture(this.cache.get("webgl_texture"))},isRenderable:function(){},isPowerOfTwo:function(){}});return r}),n("3d/webglinfo",[],function(){var e=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_draw_buffers"],t=!1,r={},n={initialize:function(n){if(!t){for(var i=0;e.length>i;i++){var a=e[i],o=n.getExtension(a);o||(o=n.getExtension("MOZ_"+a)),o||(o=n.getExtension("WEBKIT_"+a)),r[a]=o}t=!0}},getExtension:function(e){return r[e]}};return n}),n("3d/texture/texture2d",["require","../texture","../webglinfo"],function(e){var t=e("../texture"),r=e("../webglinfo"),n=t.derive({image:null,pixels:null},{update:function(e){e.bindTexture(e.TEXTURE_2D,this.cache.get("webgl_texture")),this.beforeUpdate(e);var t=e[this.format.toUpperCase()],n=e[this.type.toUpperCase()];e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e[this.wrapS.toUpperCase()]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e[this.wrapT.toUpperCase()]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e[this.magFilter.toUpperCase()]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e[this.minFilter.toUpperCase()]);var i=r.getExtension("EXT_texture_filter_anisotropic");i&&e.texParameterf(e.TEXTURE_2D,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),this.image?this.image.complete&&e.texImage2D(e.TEXTURE_2D,0,t,t,n,this.image):e.texImage2D(e.TEXTURE_2D,0,t,this.width,this.height,0,t,n,this.pixels),!this.NPOT&&this.generateMipmaps&&e.generateMipmap(e.TEXTURE_2D),e.bindTexture(e.TEXTURE_2D,null)},isPowerOfTwo:function(){if(this.image)var e=this.image.width,t=this.image.height;else var e=this.width,t=this.height;return 0===(e&e-1)&&0===(t&t-1)},isRenderable:function(){return this.image?this.image.complete:this.width&&this.height},bind:function(e){e.bindTexture(e.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.bindTexture(e.TEXTURE_2D,null)}});return n}),n("3d/texture/texturecube",["require","../texture","../webglinfo","_"],function(e){var t=e("../texture"),r=e("../webglinfo"),n=e("_"),i={px:"TEXTURE_CUBE_MAP_POSITIVE_X",py:"TEXTURE_CUBE_MAP_POSITIVE_Y",pz:"TEXTURE_CUBE_MAP_POSITIVE_Z",nx:"TEXTURE_CUBE_MAP_NEGATIVE_X",ny:"TEXTURE_CUBE_MAP_NEGATIVE_Y",nz:"TEXTURE_CUBE_MAP_NEGATIVE_Z"},a=t.derive({image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null}},{update:function(e){e.bindTexture(e.TEXTURE_CUBE_MAP,this.cache.get("webgl_texture")),this.beforeUpdate(e);var t=e[this.format.toUpperCase()],a=e[this.type.toUpperCase()];e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_S,e[this.wrapS.toUpperCase()]),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_T,e[this.wrapT.toUpperCase()]),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MAG_FILTER,e[this.magFilter.toUpperCase()]),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,e[this.minFilter.toUpperCase()]);var o=r.getExtension("EXT_texture_filter_anisotropic");o&&e.texParameterf(e.TEXTURE_CUBE_MAP,o.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),n.each(this.image,function(r,n){r?e.texImage2D(e[i[n]],0,t,t,a,r):e.texImage2D(e[i[n]],0,t,this.width,this.height,0,t,a,this.pixels[n])},this),!this.NPOT&&this.generateMipmaps&&e.generateMipmap(e.TEXTURE_CUBE_MAP),e.bindTexture(e.TEXTURE_CUBE_MAP,null)},bind:function(e){e.bindTexture(e.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.bindTexture(e.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){function e(e){return e&0===e-1}return this.image.px?e(this.image.px.width)&&e(this.image.px.height):e(this.width)&&e(this.height)},isRenderable:function(){return this.image.px?this.image.px.complete&&this.image.nx.complete&&this.image.py.complete&&this.image.ny.complete&&this.image.pz.complete&&this.image.nz.complete:this.width&&this.height}});return a}),n("3d/material",["require","core/base","./shader","util/util","./texture","./texture/texture2d","./texture/texturecube","_"],function(e){var t=e("core/base");e("./shader");var r=e("util/util"),n=e("./texture");e("./texture/texture2d"),e("./texture/texturecube");var i=e("_"),a=t.derive(function(){var e=r.genGUID();return{__GUID__:e,name:"MATERIAL_"+e,uniforms:{},shader:null,depthTest:!0,depthWrite:!0,transparent:!1,blend:null,autoBindingLights:!0}},function(){this.shader&&this.attachShader(this.shader)},{bind:function(e){var t=0;i.each(this.uniforms,function(r,i){if(!(null===r.value||r.value instanceof Array&&!r.value.length))if(r.value.instanceof&&r.value.instanceof(n)){var a=r.value;if(!a.isRenderable())return;e.activeTexture(e.TEXTURE0+t),a.bind(e),this.shader.setUniform(e,"1i",i,t),t++}else if(r.value instanceof Array){var o=r.value[0];if(o&&o.instanceof&&o.instanceof(n)){for(var s=[],u=0;r.value.length>u;u++){var a=r.value[u];a.isRenderable()&&(e.activeTexture(e.TEXTURE0+t),a.bind(e),s.push(t++))}this.shader.setUniform(e,"1iv",i,s)}else this.shader.setUniform(e,r.type,i,r.value)}else this.shader.setUniform(e,r.type,i,r.value)},this)},setUniform:function(e,t){var r=this.uniforms[e];r&&(r.value=t)},setUniforms:function(e){for(var t in e){var r=e[t];this.setUniform(t,r)}},getUniform:function(e){var t=this.uniforms[e];return t?t.value:void 0},attachShader:function(e){this.uniforms=e.createUniforms(),this.shader=e},detachShader:function(){this.shader=null,this.uniforms={}}});return a}),n("3d/mesh",["require","./node","_"],function(e){var t=e("./node");e("_");var r=0,n=t.derive(function(){return{material:null,geometry:null,mode:"TRIANGLES",receiveShadow:!0,castShadow:!0,skeleton:null}},{render:function(e,t){var n=e.gl;this.trigger("beforerender",n);var i=t||this.material,a=i.shader,o=this.geometry,s=n[this.mode.toUpperCase()];if(this.skeleton){var u=this.skeleton.getBoneMatricesArray();a.setUniform(n,"m4v","boneMatrices",u)}for(var c=o.getBufferChunks(n),l=0;c.length>l;l++){currentDrawID=n.__GUID__+"_"+o.__GUID__+"_"+l;var f=c[l],h=f.attributeBuffers,d=f.indicesBuffer;if(currentDrawID!==r){r=currentDrawID,availableAttributes={};for(var v in h){var p=h[v],m=p.semantic;if(m)var _=a.semantics[m],g=_&&_.symbol;else var g=v;g&&a.attributeTemplates[g]&&(availableAttributes[g]=p)}a.enableAttributes(n,Object.keys(availableAttributes));for(var g in availableAttributes){var p=availableAttributes[g],y=p.buffer;n.bindBuffer(n.ARRAY_BUFFER,y),a.setMeshAttribute(n,g,p)}}o.useFaces?(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,d.buffer),n.drawElements(s,d.count,n.UNSIGNED_SHORT,0)):n.drawArrays(s,0,o.vertexCount)}var b={faceNumber:o.faces.length,vertexNumber:o.getVerticesNumber(),drawcallNumber:c.length};return this.trigger("afterrender",n,b),b},bindGeometry:function(){this.material.shader,this.geometry}});return n.materialChanged=function(){r=0},n}),n("3d/compositor/shaders/vertex.essl",[],function(){return"uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nvarying vec2 v_Texcoord;\n\nvoid main(){\n\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}"}),n("3d/compositor/shaders/coloradjust.essl",[],function(){return'@export buildin.compositor.coloradjust\n\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\n\n// Values from "Graphics Shaders: Theory and Practice" by Bailey and Cunningham\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n\n    // brightness\n    gl_FragColor.xyz = tex.rgb + vec3(brightness);\n    // contrast\n    gl_FragColor.xyz = (gl_FragColor.xyz-vec3(0.5))*contrast+vec3(0.5);\n    // exposure\n    gl_FragColor.xyz = gl_FragColor.xyz * pow(2.0, exposure);\n    // gamma\n    gl_FragColor.xyz = pow(gl_FragColor.xyz, vec3(gamma));\n    // saturation\n    float luminance = dot( gl_FragColor.xyz, w );\n    gl_FragColor.xyz = mix(vec3(luminance), gl_FragColor.xyz, saturation);\n\n    gl_FragColor.w = tex.w;\n}\n\n@end'}),n("3d/compositor/shaders/blur.essl",[],function(){return"/**\n *  http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n */\n\n@export buildin.compositor.gaussian_blur_v\n\nuniform sampler2D texture; // the texture with the scene you want to blur\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 3.0; \nuniform float imageWidth : 512.0;\n\nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n \n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(v_Texcoord.x - 4.0*blurSize/imageWidth, v_Texcoord.y)) * 0.05;\n   sum += texture2D(texture, vec2(v_Texcoord.x - 3.0*blurSize/imageWidth, v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x - 2.0*blurSize/imageWidth, v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x - blurSize/imageWidth, v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.16;\n   sum += texture2D(texture, vec2(v_Texcoord.x + blurSize/imageWidth, v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x + 2.0*blurSize/imageWidth, v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x + 3.0*blurSize/imageWidth, v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x + 4.0*blurSize/imageWidth, v_Texcoord.y)) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.gaussian_blur_h\n\nuniform sampler2D texture; // this should hold the texture rendered by the horizontal blur pass\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 3.0;\nuniform float imageHeight : 512.0;\n \nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n \n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y - 4.0*blurSize/imageHeight)) * 0.05;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y - 3.0*blurSize/imageHeight)) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y - 2.0*blurSize/imageHeight)) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y - blurSize/imageHeight)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.16;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y + blurSize/imageHeight)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y + 2.0*blurSize/imageHeight)) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y + 3.0*blurSize/imageHeight)) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y + 4.0*blurSize/imageHeight)) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.box_blur\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 3.0;\nuniform float imageWidth : 512.0;\nuniform float imageHeight : 512.0;\n\nvoid main(void){\n\n   vec4 tex = texture2D(texture, v_Texcoord);\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, -offset.y) );\n\n   tex /= 9.0;\n   return tex;\n}\n\n@end\n\n// http://www.slideshare.net/DICEStudio/five-rendering-ideas-from-battlefield-3-need-for-speed-the-run\n@export buildin.compositor.hexagonal_blur_mrt_1\n\n// MRT in chrome\n// https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n#extension GL_EXT_draw_buffers : require\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform float imageWidth : 512.0;\nuniform float imageHeight : 512.0;\n\nvoid main(void){\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   vec4 color = vec4(0.0);\n   // Top\n   for(int i = 0; i < 10; i++){\n      color += 1.0/10.0 * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragData[0] = color;\n   vec4 color2 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragData[1] = (color + color2) / 2.0;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_mrt_2\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform float imageWidth : 512.0;\nuniform float imageHeight : 512.0;\n\nvoid main(void){\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   vec4 color1 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color1 += 1.0/10.0 * texture2D(texture0, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2) / 2.0;\n}\n\n@end\n\n\n@export buildin.compositor.hexagonal_blur_1\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform float imageWidth : 512.0;\nuniform float imageHeight : 512.0;\n\nvoid main(void){\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   vec4 color = vec4(0.0);\n   // Top\n   for(int i = 0; i < 10; i++){\n      color += 1.0/10.0 * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_2\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform float imageWidth : 512.0;\nuniform float imageHeight : 512.0;\n\nvoid main(void){\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   vec4 color = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color += 1.0/10.0 * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n@end\n\n@export buildin.compositor.hexagonal_blur_3\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform float imageWidth : 1.0;\nuniform float imageHeight : 1.0;\n\nvoid main(void){\n   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);\n\n   vec4 color1 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color1 += 1.0/10.0 * texture2D(texture1, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   vec4 color3 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < 10; i++){\n      color3 += 1.0/10.0 * texture2D(texture2, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2 + color3) / 3.0;\n}\n\n@end"
}),n("3d/compositor/shaders/grayscale.essl",[],function(){return"\n@export buildin.compositor.grayscale\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n\n    gl_FragColor = vec4(vec3(luminance), tex.a);\n}\n\n@end"}),n("3d/compositor/shaders/lut.essl",[],function(){return"\n// https://github.com/BradLarson/GPUImage?source=c\n@export buildin.compositor.lut\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\nuniform sampler2D lookup;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    float blueColor = tex.b * 63.0;\n    \n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    \n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    \n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    \n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n\n@end"}),n("3d/compositor/shaders/output.essl",[],function(){return"\n@export buildin.compositor.output\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n\n    gl_FragColor = tex;\n}\n\n@end"}),n("3d/compositor/pass",["require","core/base","../scene","../camera/orthographic","../geometry/plane","../shader","../material","../mesh","../scene","./shaders/vertex.essl","../texture","../webglinfo","./shaders/coloradjust.essl","./shaders/blur.essl","./shaders/grayscale.essl","./shaders/lut.essl","./shaders/output.essl"],function(e){var t=e("core/base"),r=e("../scene"),n=e("../camera/orthographic"),i=e("../geometry/plane"),a=e("../shader"),o=e("../material"),s=e("../mesh"),r=e("../scene"),u=e("./shaders/vertex.essl");e("../texture");var c=e("../webglinfo"),l=new i,f=new s({geometry:l}),h=new r,d=new n;h.add(f);var v=t.derive(function(){return{fragment:"",outputs:null,_material:null}},function(){var e=new a({vertex:u,fragment:this.fragment}),t=new o({shader:e});e.enableTexturesAll(),this._material=t},{setUniform:function(e,t){var r=this._material.uniforms[e];r&&(r.value=t)},bind:function(e,t){if(this.outputs){for(var r in this.outputs){var n=this.outputs[r];t.attach(e.gl,n,r)}t.bind(e)}},unbind:function(e,t){t.unbind(e)},render:function(e,t){var r=e.gl;f.material=this._material,t&&this.bind(e,t);var n=c.getExtension("EXT_draw_buffers");if(n){var i=[];for(var a in this.outputs)a=parseInt(a),a>=r.COLOR_ATTACHMENT0&&r.COLOR_ATTACHMENT0+8>=a&&i.push(a);n.drawBuffersEXT(i)}e.render(h,d,!0),t&&this.unbind(e,t)}});return a.import(e("./shaders/coloradjust.essl")),a.import(e("./shaders/blur.essl")),a.import(e("./shaders/grayscale.essl")),a.import(e("./shaders/lut.essl")),a.import(e("./shaders/output.essl")),v}),n("3d/framebuffer",["require","core/base","./texture/texture2d","./texture/texturecube","./webglinfo"],function(e){var t=e("core/base");e("./texture/texture2d");var r=e("./texture/texturecube"),n=e("./webglinfo"),i=t.derive(function(){return{depthBuffer:!0,_attachedTextures:{}}},{bind:function(e){var t=e.gl;if(t.bindFramebuffer(t.FRAMEBUFFER,this.getFrameBuffer(t)),this.cache.put("viewport",e.viewportInfo),e.setViewport(0,0,this.cache.get("width"),this.cache.get("height")),this.cache.miss("renderbuffer")&&this.depthBuffer&&!this.cache.get("depth_texture")&&this.cache.put("renderbuffer",t.createRenderbuffer()),!this.cache.get("depth_texture")&&this.depthBuffer){var r=this.cache.get("width"),n=this.cache.get("height"),i=this.cache.get("renderbuffer");(r!==this.cache.get("renderbuffer_width")||n!==this.cache.get("renderbuffer_height"))&&(t.bindRenderbuffer(t.RENDERBUFFER,i),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,r,n),this.cache.put("renderbuffer_width",r),this.cache.put("renderbuffer_height",n),t.bindRenderbuffer(t.RENDERBUFFER,null)),this.cache.get("renderbuffer_attached")||(t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,i),this.cache.put("renderbuffer_attached",!0))}},unbind:function(e){var t=e.gl;t.bindFramebuffer(t.FRAMEBUFFER,null),this.cache.use(t.__GUID__);var n=this.cache.get("viewport");n&&e.setViewport(n.x,n.y,n.width,n.height);for(var i in this._attachedTextures){var a=this._attachedTextures[i];if(!a.NPOT&&a.generateMipmaps){var o=a.instanceof(r)?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D;t.bindTexture(o,a.getWebGLTexture(t)),t.generateMipmap(o),t.bindTexture(o,null)}}},getFrameBuffer:function(e){return this.cache.use(e.__GUID__),this.cache.miss("framebuffer")&&this.cache.put("framebuffer",e.createFramebuffer()),this.cache.get("framebuffer")},attach:function(e,t,r,i){if(!t.width)return console.error("The texture attached to color buffer is not a valid."),void 0;if(this._renderBuffer&&this.depthBuffer&&(this._width!==t.width||this.height!==t.height)&&console.warn("Attached texture has different width or height, it will cause the render buffer recreate a storage "),e.bindFramebuffer(e.FRAMEBUFFER,this.getFrameBuffer(e)),this.cache.put("width",t.width),this.cache.put("height",t.height),i=i||e.TEXTURE_2D,r=r||e.COLOR_ATTACHMENT0,"DEPTH_ATTACHMENT"===r){var a=n.getExtension("WEBGL_depth_texture");if(!a)return console.error(" Depth texture is not supported by the browser "),void 0;if("DEPTH_COMPONENT"!==t.format)return console.error("The texture attached to depth buffer is not a valid."),void 0;this.cache.put("renderbuffer_attached",!1),this.cache.put("depth_texture",!0)}this._attachedTextures[r]=t,e.framebufferTexture2D(e.FRAMEBUFFER,r,i,t.getWebGLTexture(e),0),e.bindFramebuffer(e.FRAMEBUFFER,null)},detach:function(){},dispose:function(e){this.cache.use(e.__GUID__),this.cache.get("renderbuffer")&&e.deleteRenderbuffer(this.cache.get("renderbuffer")),this.cache.get("framebuffer")&&e.deleteFramebuffer(this.cache.get("framebuffer")),this.cache.clearContext()}});return i}),n("3d/compositor/graph/texturepool",["require","../../texture/texture2d","_"],function(e){function t(e){var t={width:512,height:512,type:"UNSIGNED_BYTE",format:"RGBA",wrapS:"CLAMP_TO_EDGE",wrapT:"CLAMP_TO_EDGE",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",generateMipmaps:!0,anisotropy:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1};o.defaults(e,t),r(e);var n="";for(var i in t){if(e[i])var a=""+e[i];else var a=""+t[i];n+=a}return n}function r(e){var t=n(e.width,e.height);"DEPTH_COMPONENT"===e.format&&(e.generateMipmaps=!1),t&&e.generateMipmaps||(e.minFilter=0==e.minFilter.indexOf("NEAREST")?"NEAREST":"LINEAR",e.magFilter=0==e.magFilter.indexOf("NEAREST")?"NEAREST":"LINEAR",e.wrapS="CLAMP_TO_EDGE",e.wrapT="CLAMP_TO_EDGE")}function n(e,t){return 0===(e&e-1)&&0===(t&t-1)}var i=e("../../texture/texture2d"),o=e("_"),s={},u={get:function(e){var r=t(e);s.hasOwnProperty(r)||(s[r]=[]);var n=s[r];if(!n.length){var a=new i(e);return a}return n.pop()},put:function(e){var r=t(e);s.hasOwnProperty(r)||(s[r]=[]);var n=s[r];n.push(e)},clear:function(){for(a in s)for(var e=0;s[a].length>e;e++)s[a][e].dispose();s={}}};return u}),n("3d/compositor/graph/node",["require","core/base","../pass","../../framebuffer","../../shader","./texturepool"],function(e){var t=e("core/base"),r=e("../pass"),n=e("../../framebuffer");e("../../shader");var i=e("./texturepool"),a=t.derive(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},_textures:{},pass:null,_outputReferences:{}}},function(){if(this.shader){var e=new r({fragment:this.shader});this.pass=e}this.outputs&&(this.frameBuffer=new n({depthBuffer:!1}))},{render:function(e){var t=e.gl;for(var r in this.inputLinks){var n=this.inputLinks[r],a=n.node.getOutput(e,n.pin);this.pass.setUniform(r,a)}if(this.outputs){this.pass.outputs={};for(var o in this.outputs){var s=this.outputs[o],u=i.get(s.parameters||{});this._textures[o]=u;var c=s.attachment||t.COLOR_ATTACHMENT0;"string"==typeof c&&(c=t[c]),this.pass.outputs[c]=u}this.pass.render(e,this.frameBuffer)}else this.pass.outputs=null,this.pass.render(e);for(var r in this.inputLinks){var n=this.inputLinks[r];n.node.removeReference(n.pin)}},setParameter:function(e,t){this.pass.setUniform(e,t)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},getOutput:function(e,t){var r=this.outputs[t];if(r)return this._textures[t]?this._textures[t]:(this.render(e),this._textures[t])},removeReference:function(e){this._outputReferences[e]--,0===this._outputReferences[e]&&(i.put(this._textures[e]),this._textures[e]=null)},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e})},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(){for(var e in this.outputLinks)this._outputReferences[e]=this.outputLinks[e].length}});return a}),n("3d/compositor/graph/scenenode",["require","./node","../pass","../../framebuffer","./texturepool","../../webglinfo"],function(e){var t=e("./node");e("../pass"),e("../../framebuffer");var r=e("./texturepool"),n=e("../../webglinfo"),i=t.derive(function(){return{scene:null,camera:null,material:null}},function(){this.frameBuffer&&(this.frameBuffer.depthBuffer=!0)},{render:function(e){var t=e.gl;if(this.outputs){var i=this.frameBuffer;for(var a in this.outputs){var o=this.outputs[a],s=r.get(o.parameters||{});this._textures[a]=s;var u=o.attachment||t.COLOR_ATTACHMENT0;"string"==typeof u&&(u=t[u]),i.attach(e.gl,s,u)}i.bind(e);var c=n.getExtension("EXT_draw_buffers");if(c){var l=[];for(var u in this.outputs)u=parseInt(u),u>=t.COLOR_ATTACHMENT0&&t.COLOR_ATTACHMENT0+8>=u&&l.push(u);c.drawBuffersEXT(l)}this.material&&(this.scene.material=this.material),e.render(this.scene,this.camera),this.scene.material=null,i.unbind(e)}else e.render(this.scene,this.camera)}});return i}),n("3d/debug/pointlight",function(){}),n("3d/debug/renderinfo",["require","core/base"],function(e){var t=e("core/base"),r=t.derive(function(){return{renderer:null,frameTime:0,vertexNumber:0,faceNumber:0,drawcallNumber:0,meshNumber:0,_startTime:0}},{enable:function(){this.renderer.on("beforerender",this._beforeRender,this),this.renderer.on("afterrender",this._afterRender,this),this.renderer.on("afterrender:mesh",this._afterRenderMesh,this)},disable:function(){this.renderer.off("beforerender",this._beforeRender),this.renderer.off("afterrender",this._afterRender),this.renderer.off("afterrender:mesh",this._afterRenderMesh)},clear:function(){this.vertexNumber=0,this.faceNumber=0,this.drawcallNumber=0,this.meshNumber=0,this.frameTime=0},_beforeRender:function(){this.clear(),this._startTime=(new Date).getTime()},_afterRender:function(){var e=(new Date).getTime();this.frameTime=e-this._startTime},_afterRenderMesh:function(e,t){this.vertexNumber+=t.vertexNumber,this.faceNumber+=t.faceNumber,this.drawcallNumber+=t.drawcallNumber,this.meshNumber++}});return r}),n("3d/geometry/cube",["require","../geometry","./plane","core/matrix4","core/vector3","_"],function(e){function t(e,t,r){s.identity();var i=new n({widthSegments:t,heightSegments:r});switch(e){case"px":s.translate(new a(1,0,0)),s.rotateY(Math.PI/2);break;case"nx":s.translate(new a(-1,0,0)),s.rotateY(-Math.PI/2);break;case"py":s.translate(new a(0,1,0)),s.rotateX(-Math.PI/2);break;case"ny":s.translate(new a(0,-1,0)),s.rotateX(Math.PI/2);break;case"pz":s.translate(new a(0,0,1));break;case"nz":s.translate(new a(0,0,-1)),s.rotateY(Math.PI)}return i.applyMatrix(s),i}var r=e("../geometry"),n=e("./plane"),i=e("core/matrix4"),a=e("core/vector3"),o=e("_"),s=new i,u=r.derive(function(){return{widthSegments:1,heightSegments:1,depthSegments:1,inside:!1}},function(){var e={px:t("px",this.depthSegments,this.heightSegments),nx:t("nx",this.depthSegments,this.heightSegments),py:t("py",this.widthSegments,this.depthSegments),ny:t("ny",this.widthSegments,this.depthSegments),pz:t("pz",this.widthSegments,this.heightSegments),nz:t("nz",this.widthSegments,this.heightSegments)},r=0;for(var n in e)o.each(["position","texcoord0","normal"],function(t){for(var i=e[n].attributes[t].value,a=0;i.length>a;a++){var o=i[a];this.inside&&"normal"===t&&(o[0]=-o[0],o[1]=-o[1],o[2]=-o[2]),this.attributes[t].value.push(o)}for(var s=e[n],a=0;s.faces.length>a;a++){var u=s.faces[a];this.faces.push([u[0]+r,u[1]+r,u[2]+r])}},this),r+=e[n].getVerticesNumber()});return u}),n("3d/geometry/sphere",["require","../geometry","glmatrix"],function(e){var t=e("../geometry"),r=e("glmatrix"),n=r.vec3,i=r.vec2,a=t.derive(function(){return{widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1}},function(){var e,t,r,a,o,s,u,c,l=this.attributes.position.value,f=this.attributes.texcoord0.value,h=this.attributes.normal.value,d=this.heightSegments,v=this.widthSegments,p=this.radius,m=this.phiStart,_=this.phiLength,g=this.thetaStart,y=this.thetaLength,p=this.radius;for(u=0;d>=u;u++)for(s=0;v>=s;s++)a=s/v,o=u/d,e=-p*Math.cos(m+a*_)*Math.sin(g+o*y),t=p*Math.cos(g+o*y),r=p*Math.sin(m+a*_)*Math.sin(g+o*y),l.push(n.fromValues(e,t,r)),f.push(i.fromValues(a,o)),c=n.fromValues(e,t,r),h.push(n.normalize(c,c));var b,x,E,T,w=this.faces,I=v+1;for(u=0;d>u;u++)for(s=0;v>s;s++)b=u*I+s,x=u*I+s+1,E=(u+1)*I+s+1,T=(u+1)*I+s,w.push(n.fromValues(b,x,E)),w.push(n.fromValues(E,T,b))});return a}),n("3d/light",["require","./node"],function(e){var t=e("./node"),r=t.derive(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512}},{});return r}),n("3d/light/ambient",["require","../light","../shader"],function(e){var t=e("../light"),r=e("../shader"),n=["@export buildin.header.ambient_light","uniform vec3 ambientLightColor[ AMBIENT_LIGHT_NUMBER ] : unconfigurable;","@end;"].join("\n");r.import(n);var i=t.derive(function(){return{castShadow:!1}},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[1]*r]}}}});return i}),n("3d/light/directional",["require","../light","../shader","core/vector3"],function(e){var t=e("../light"),r=e("../shader"),n=e("core/vector3"),i=["@export buildin.header.directional_light","uniform vec3 directionalLightDirection[ DIRECTIONAL_LIGHT_NUMBER ] : unconfigurable;","uniform vec3 directionalLightColor[ DIRECTIONAL_LIGHT_NUMBER ] : unconfigurable;","@end;"].join("\n");r.import(i);var a=t.derive(function(){return{shadowCamera:{left:-20,right:20,top:20,bottom:-20,near:0,far:100}}},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(){var e=new n;return function(t){return e.copy(t.matrix.forward).negate()._array}}()},directionalLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[1]*r]}}}});return a}),n("3d/light/point",["require","../light","../shader"],function(e){var t=e("../light"),r=e("../shader"),n=["@export buildin.header.point_light","uniform vec3 pointLightPosition[ POINT_LIGHT_NUMBER ] : unconfigurable;","uniform float pointLightRange[ POINT_LIGHT_NUMBER ] : unconfigurable;","uniform vec3 pointLightColor[ POINT_LIGHT_NUMBER ] : unconfigurable;","@end;"].join("\n");r.import(n);var i=t.derive(function(){return{range:100,castShadow:!1}},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[1]*r]}}}});return i}),n("3d/light/spot",["require","../light","../shader","core/vector3"],function(e){var t=e("../light"),r=e("../shader"),n=e("core/vector3"),i=["@export buildin.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform vec3 spotLightDirection[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform float spotLightRange[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform float spotLightFalloffFactor[SPOT_LIGHT_NUMBER] : unconfigurable;","uniform vec3 spotLightColor[SPOT_LIGHT_NUMBER] : unconfigurable;","@end;"].join("\n");r.import(i);var a=t.derive(function(){return{range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2}},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(){var e=new n;return function(t){return e.copy(t.matrix.forward).negate()._array}}()},spotLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[1]*r]}}}});return a}),n("3d/plugin/firstpersoncontrol",["require","core/base","core/vector3","core/matrix4","core/quaternion"],function(e){function t(e,t){return e.__bindfuc__||(e.__bindfuc__=function(){return e.apply(t,arguments)}),e.__bindfuc__}var r=e("core/base"),n=e("core/vector3");e("core/matrix4");var i=e("core/quaternion"),a=new n(0,1,0),o=r.derive(function(){return{camera:null,canvas:null,sensitivity:1,speed:.4,_moveForward:!1,_moveBackward:!1,_moveLeft:!1,_moveRight:!1,_offsetPitch:0,_offsetRoll:0}},{enable:function(){this.camera.on("beforeupdate",this._beforeUpdateCamera,this),this.camera.eulerOrder=["Y","X","Z"];var e=this.canvas;e.addEventListener("click",this.requestPointerLock),document.addEventListener("pointerlockchange",t(this._lockChange,this),!1),document.addEventListener("mozpointerlockchange",t(this._lockChange,this),!1),document.addEventListener("webkitpointerlockchange",t(this._lockChange,this),!1),document.addEventListener("keydown",t(this._keyDown,this),!1),document.addEventListener("keyup",t(this._keyUp,this),!1)},disable:function(){this.camera.off("beforeupdate",this._beforeUpdateCamera);var e=this.canvas;e.exitPointerLock=e.exitPointerLock||e.mozExitPointerLock||e.webkitExitPointerLock,e.exitPointerLock&&e.exitPointerLock(),document.removeEventListener("pointerlockchange",t(this._lockChange,this)),document.removeEventListener("mozpointerlockchange",t(this._lockChange,this)),document.removeEventListener("webkitpointerlockchange",t(this._lockChange,this))},requestPointerLock:function(){var e=this;e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock||e.webkitRequestPointerLock,e.requestPointerLock()},_beforeUpdateCamera:function(){return new i,function(){var e=this.camera,t=this.camera.position,r=e.matrix.right.normalize(),n=e.matrix.forward.normalize();this._moveForward&&t.scaleAndAdd(n,-this.speed),this._moveBackward&&t.scaleAndAdd(n,this.speed),this._moveLeft&&t.scaleAndAdd(r,-this.speed/2),this._moveRight&&t.scaleAndAdd(r,this.speed/2),e.rotateAround(e.position,a,-this._offsetPitch*Math.PI/180);var r=e.matrix.right;e.rotateAround(e.position,r,-this._offsetRoll*Math.PI/180),this._offsetRoll=this._offsetPitch=0}}(),_lockChange:function(){document.pointerlockElement===this.canvas||document.mozPointerlockElement===this.canvas||document.webkitPointerLockElement===this.canvas?document.addEventListener("mousemove",t(this._mouseMove,this),!1):document.removeEventListener("mousemove",t(this._mouseMove,this),!1)},_mouseMove:function(e){var t=e.movementX||e.mozMovementX||e.webkitMovementX||0,r=e.movementY||e.mozMovementY||e.webkitMovementY||0;this._offsetPitch+=t*this.sensitivity/10,this._offsetRoll+=r*this.sensitivity/10},_keyDown:function(e){switch(e.keyCode){case 87:case 37:this._moveForward=!0;break;case 83:case 40:this._moveBackward=!0;break;case 65:case 37:this._moveLeft=!0;break;case 68:case 39:this._moveRight=!0}},_keyUp:function(e){switch(e.keyCode){case 87:case 37:this._moveForward=!1;break;case 83:case 40:this._moveBackward=!1;break;case 65:case 37:this._moveLeft=!1;break;case 68:case 39:this._moveRight=!1}}});return o}),n("3d/shader/source/basic.essl",[],function(){return"@export buildin.basic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\nattribute vec3 barycentric;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n\nvoid main(){\n\n    gl_Position = worldViewProjection * vec4( position, 1.0 );\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n\n\n@export buildin.basic.fragment\n\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n@import buildin.util.edge_factor\n\nvoid main(){\n\n    gl_FragColor = vec4(color, alpha);\n    \n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D( diffuseMap, v_Texcoord );\n        gl_FragColor.rgb *= tex.rgb;\n    #endif\n    \n    if( lineWidth > 0.01){\n        gl_FragColor.xyz = gl_FragColor.xyz * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n}\n\n@end"}),n("3d/shader/source/lambert.essl",[],function(){return"/**\n * http://en.wikipedia.org/wiki/Lambertian_reflectance\n */\n\n@export buildin.lambert.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 boneWeight;\nattribute vec4 boneIndex;\n\nuniform mat4 boneMatrices[ BONE_MATRICES_NUMBER ];\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\nvoid main(){\n\n    vec3 skinnedPosition = position;\n    #ifdef SKINNING\n        mat4 skinMatrix;\n        if(boneIndex.x >= 0.0){\n            skinMatrix = boneMatrices[int(boneIndex.x)] * boneWeight.x;\n        }\n        if(boneIndex.y >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.y)] * boneWeight.y;\n        }\n        if(boneIndex.z >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.z)] * boneWeight.z;\n        }\n        if(boneIndex.w >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.w)] * (1.0-boneWeight.x-boneWeight.y-boneWeight.z);\n        }\n        skinnedPosition = (skinMatrix * vec4(position, 1.0)).xyz;\n\n        skinnedNormal = (skinMatrix * vec4(normal, 0.0)).xyz;\n        skinnedTangent = (skinMatrix * vec4(tangent.xyz, 0.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(normal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n\n\n@export buildin.lambert.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main(){\n    \n    gl_FragColor = vec4(color, alpha);\n\n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D( diffuseMap, v_Texcoord );\n        // http://freesdk.crydev.net/display/SDKDOC3/Specular+Maps\n        gl_FragColor.rgb *= tex.rgb;\n    #endif\n\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n    \n    #ifdef AMBIENT_LIGHT_NUMBER\n        for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++){\n            diffuseColor += ambientLightColor[i];\n        }\n    #endif\n    // Compute point light color\n    #ifdef POINT_LIGHT_NUMBER\n        #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[POINT_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfPointLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < POINT_LIGHT_NUMBER; i++){\n\n            vec3 lightPosition = pointLightPosition[i];\n            vec3 lightColor = pointLightColor[i];\n            float range = pointLightRange[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n\n            // Calculate point light attenuation\n            float dist = length(lightDirection);\n            float attenuation = calculateAttenuation(dist, range);\n\n            // Normalize vectors\n            lightDirection /= dist;\n\n            float ndl = dot( v_Normal, lightDirection );\n\n            float shadowFallOff = 1.0;\n            #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowFallOff;\n        }\n    #endif\n    #ifdef DIRECTIONAL_LIGHT_NUMBER\n        #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[DIRECTIONAL_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfDirectionalLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n            vec3 lightDirection = -directionalLightDirection[i];\n            vec3 lightColor = directionalLightColor[i];\n            \n            float ndl = dot( v_Normal, normalize( lightDirection ) );\n\n            float shadowFallOff = 1.0;\n            #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowFallOff;\n        }\n    #endif\n    \n    #ifdef SPOT_LIGHT_NUMBER\n        #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[SPOT_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfSpotLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < SPOT_LIGHT_NUMBER; i++){\n            vec3 lightPosition = -spotLightPosition[i];\n            vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n            vec3 lightColor = spotLightColor[i];\n            float range = spotLightRange[i];\n            float umbraAngleCosine = spotLightUmbraAngleCosine[i];\n            float penumbraAngleCosine = spotLightPenumbraAngleCosine[i];\n            float falloffFactor = spotLightFalloffFactor[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n            // Calculate attenuation\n            float dist = length(lightDirection);\n            float attenuation = calculateAttenuation(dist, range); \n\n            // Normalize light direction\n            lightDirection /= dist;\n            // Calculate spot light fall off\n            float lightDirectCosine = dot(spotLightDirection, lightDirection);\n\n            float falloff;\n            if( lightDirectCosine < penumbraAngleCosine ){\n                falloff = 1.0;\n            }else if( lightDirectCosine > umbraAngleCosine ){\n                falloff = 0.0;\n            }else{\n                falloff = (lightDirectCosine-umbraAngleCosine)/(penumbraAngleCosine-umbraAngleCosine);\n                falloff = pow(falloff, falloffFactor);\n            }\n\n            float ndl = dot( v_Normal, lightDirection );\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowFallOff = 1.0;\n            #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowFallOff;\n\n        }\n    #endif\n\n    gl_FragColor.xyz *= diffuseColor;\n    if( lineWidth > 0.01){\n        gl_FragColor.xyz = gl_FragColor.xyz * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n}\n\n@end"}),n("3d/shader/source/phong.essl",[],function(){return"\n// http://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model\n\n@export buildin.phong.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 boneWeight;\nattribute vec4 boneIndex;\n\nuniform mat4 boneMatrices[ BONE_MATRICES_NUMBER ];\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n\nvoid main(){\n    \n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n    #ifdef SKINNING\n        mat4 skinMatrix;\n        if(boneIndex.x >= 0.0){\n            skinMatrix = boneMatrices[int(boneIndex.x)] * boneWeight.x;\n        }\n        if(boneIndex.y >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.y)] * boneWeight.y;\n        }\n        if(boneIndex.z >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.z)] * boneWeight.z;\n        }\n        if(boneIndex.w >= 0.0){\n            skinMatrix += boneMatrices[int(boneIndex.w)] * (1.0-boneWeight.x-boneWeight.y-boneWeight.z);\n        }\n        skinnedPosition = (skinMatrix * vec4(position, 1.0)).xyz;\n        // Normal matrix ???\n        skinnedNormal = (skinMatrix * vec4(normal, 0.0)).xyz;\n        skinnedTangent = (skinMatrix * vec4(tangent.xyz, 0.0)).xyz;\n\n    #endif\n\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n    v_Barycentric = barycentric;\n\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_Tangent = normalize( (worldInverseTranspose * vec4(skinnedTangent, 0.0) ).xyz );\n    v_Bitangent = normalize( cross(v_Normal, v_Tangent) * tangent.w );\n\n}\n\n@end\n\n\n@export buildin.phong.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D normalMap;\nuniform sampler2D environmentMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nuniform float shininess : 30;\n\nuniform vec3 specular : [1.0, 1.0, 1.0];\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main(){\n    \n    vec4 finalColor = vec4(color, alpha);\n\n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D( diffuseMap, v_Texcoord );\n        finalColor.rgb *= tex.rgb;\n    #endif\n\n    vec3 normal = v_Normal;\n    #ifdef NORMALMAP_ENABLED\n        normal = texture2D( normalMap, v_Texcoord ).xyz * 2.0 - 1.0;\n        mat3 tbn = mat3( v_Tangent, v_Bitangent, v_Normal );\n        normal = normalize( tbn * normal );\n    #endif\n\n    // Diffuse part of all lights\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n    // Specular part of all lights\n    vec3 specularColor = vec3(0.0, 0.0, 0.0);\n    \n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(eyePos - v_WorldPosition);\n\n    #ifdef AMBIENT_LIGHT_NUMBER\n        for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++){\n            diffuseColor += ambientLightColor[i];\n        }\n    #endif\n    #ifdef POINT_LIGHT_NUMBER\n        #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[POINT_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfPointLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < POINT_LIGHT_NUMBER; i++){\n\n            vec3 lightPosition = pointLightPosition[i];\n            vec3 lightColor = pointLightColor[i];\n            float range = pointLightRange[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n\n            // Calculate point light attenuation\n            float dist = length(lightDirection);\n            float attenuation = calculateAttenuation(dist, range); \n\n            // Normalize vectors\n            lightDirection /= dist;\n            vec3 halfVector = normalize( lightDirection + viewDirection );\n\n            float ndh = dot( normal, halfVector );\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot( normal,  lightDirection );\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowFallOff = 1.0;\n            #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * ndl * attenuation * shadowFallOff;\n\n            specularColor += specular * pow( ndh, shininess ) * attenuation * shadowFallOff;\n\n        }\n    #endif\n\n    #ifdef DIRECTIONAL_LIGHT_NUMBER\n        #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[DIRECTIONAL_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfDirectionalLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n\n            vec3 lightDirection = -normalize( directionalLightDirection[i] );\n            vec3 lightColor = directionalLightColor[i];\n\n            vec3 halfVector = normalize( lightDirection + viewDirection );\n\n            float ndh = dot( normal, halfVector );\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot( normal, lightDirection );\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowFallOff = 1.0;\n            #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * ndl * shadowFallOff;\n\n            specularColor += specular * pow( ndh, shininess ) * shadowFallOff;\n        }\n    #endif\n\n    #ifdef SPOT_LIGHT_NUMBER\n        #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowFallOffs[SPOT_LIGHT_NUMBER];\n            if( shadowEnabled ){\n                computeShadowFallOfSpotLights( v_WorldPosition, shadowFallOffs );\n            }\n        #endif\n        for(int i = 0; i < SPOT_LIGHT_NUMBER; i++){\n            vec3 lightPosition = spotLightPosition[i];\n            vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n            vec3 lightColor = spotLightColor[i];\n            float range = spotLightRange[i];\n            float umbraAngleCosine = spotLightUmbraAngleCosine[i];\n            float penumbraAngleCosine = spotLightPenumbraAngleCosine[i];\n            float falloffFactor = spotLightFalloffFactor[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n            // Calculate attenuation\n            float dist = length(lightDirection);\n            float attenuation = calculateAttenuation(dist, range); \n\n            // Normalize light direction\n            lightDirection /= dist;\n            // Calculate spot light fall off\n            float lightDirectCosine = dot(spotLightDirection, lightDirection);\n\n            float falloff;\n            // Fomular from real-time-rendering\n            if( lightDirectCosine < penumbraAngleCosine ){\n                falloff = 1.0;\n            }else if( lightDirectCosine > umbraAngleCosine ){\n                falloff = 0.0;\n            }else{\n                falloff = (lightDirectCosine-umbraAngleCosine)/(penumbraAngleCosine-umbraAngleCosine);\n                falloff = pow(falloff, falloffFactor);\n            }\n\n            vec3 halfVector = normalize( lightDirection + viewDirection );\n\n            float ndh = dot( normal, halfVector );\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot( normal, lightDirection );\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowFallOff = 1.0;\n            #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled ){\n                    shadowFallOff = shadowFallOffs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowFallOff;\n\n            specularColor += specular * pow( ndh, shininess ) * attenuation * (1.0-falloff) * shadowFallOff;\n\n        }\n    #endif\n\n    finalColor.rgb *= diffuseColor;\n    finalColor.rgb += specularColor;\n\n    if( lineWidth > 0.01){\n        finalColor.rgb = finalColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n    gl_FragColor = finalColor;\n}\n\n@end"
}),n("3d/shader/source/wireframe.essl",[],function(){return"@export buildin.wireframe.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n\nvarying vec3 v_Barycentric;\n\nvoid main(){\n\n    gl_Position = worldViewProjection * vec4( position, 1.0 );\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export buildin.wireframe.fragment\n\nuniform vec3 color : [0.0, 0.0, 0.0];\n\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.5;\n\nvarying vec3 v_Barycentric;\n\n#extension GL_OES_standard_derivatives : enable\n\n@import buildin.util.edge_factor\n\nvoid main(){\n\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = ( 1.0-edgeFactor(lineWidth) ) * alpha;\n}\n\n@end"}),n("3d/shader/source/util.essl",[],function(){return"// Use light attenuation formula in\n// http://blog.slindev.com/2011/01/10/natural-light-attenuation/\n@export buildin.util.calculate_attenuation\n\nuniform float attenuationFactor : 5.0;\n\nfloat calculateAttenuation(float dist, float range){\n    float attenuation = 1.0;\n    if( range > 0.0){\n        attenuation = dist*dist/(range*range);\n        float att_s = attenuationFactor;\n        attenuation = 1.0/(attenuation*att_s+1.0);\n        att_s = 1.0/(att_s+1.0);\n        attenuation = attenuation - att_s;\n        attenuation /= 1.0 - att_s;\n    }\n    return attenuation;\n}\n\n@end\n\n//http://codeflow.org/entries/2012/aug/02/easy-wireframe-display-with-barycentric-coordinates/\n@export buildin.util.edge_factor\n\nfloat edgeFactor(float width){\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n\n@end\n\n// Pack depth\n// http://devmaster.net/posts/3002/shader-effects-shadow-mapping\n@export buildin.util.pack_depth\nvec4 packDepth( const in float depth ){\n\n    const vec4 bias = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n\n    float r = depth;\n    float g = fract(r * 255.0);\n    float b = fract(g * 255.0);\n    float a = fract(b * 255.0);\n    vec4 colour = vec4(r, g, b, a);\n    \n    return colour - (colour.yzww * bias);\n}\n@end\n\n@export buildin.util.unpack_depth\nfloat unpackDepth( const in vec4 colour ){\n    const vec4 bitShifts = vec4(1.0, 1.0 / 255.0, 1.0 / (255.0 * 255.0), 1.0 / (255.0 * 255.0 * 255.0));\n    return dot(colour, bitShifts);\n}\n@end\n\n@export buildin.util.pack_depth_half\nvec2 packDepthHalf( const in float depth ){\n    const vec2 bitShifts = vec2(256.0, 1.0);\n    const vec4 bitMask = vec4(0.0, 1.0/256.0);\n\n    vec2 rg = fract(depth*bitShifts);\n    rg -= rg.xx * bitMask;\n\n    return rg;\n}\n@end\n\n@export buildin.util.unpack_depth_half\nfloat unpackDepthHalf( const in vec2 rg ){\n    const vec4 bitShifts = vec2(1.0/256.0, 1.0);\n    return dot(rg, bitShifts);\n}\n@end"}),n("3d/shader/library",["require","../shader","_","./source/basic.essl","./source/lambert.essl","./source/phong.essl","./source/wireframe.essl","./source/util.essl"],function(e){function t(e,t){t?"string"==typeof t&&(t=Array.prototype.slice.call(arguments,1)):t=[];var r=e+"_"+t.sort().join(",");if(_pool[r])return _pool[r];var a=_library[e];if(!a)return console.error('Shader "'+e+'"'+" is not in the library"),void 0;var o=new n({vertex:a.vertex,fragment:a.fragment});return i.each(t,function(e){o.enableTexture(e)}),_pool[r]=o,o}function r(e,t,r){_library[e]={vertex:t,fragment:r}}var n=e("../shader"),i=e("_");return _library={},_pool={},n.import(e("./source/basic.essl")),n.import(e("./source/lambert.essl")),n.import(e("./source/phong.essl")),n.import(e("./source/wireframe.essl")),n.import(e("./source/util.essl")),r("buildin.basic",n.source("buildin.basic.vertex"),n.source("buildin.basic.fragment")),r("buildin.lambert",n.source("buildin.lambert.vertex"),n.source("buildin.lambert.fragment")),r("buildin.phong",n.source("buildin.phong.vertex"),n.source("buildin.phong.fragment")),r("buildin.wireframe",n.source("buildin.wireframe.vertex"),n.source("buildin.wireframe.fragment")),{get:t,put:r}}),n("3d/prepass/vsm.essl",[],function(){return"/**\n *  Variance Shadow Mapping\n * http://www.punkuser.net/vsm/vsm_paper.pdf\n * http://developer.download.nvidia.com/SDK/10/direct3d/Source/VarianceShadowMapping/Doc/VarianceShadowMapping.pdf\n */\n@export buildin.vsm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nvarying vec4 v_ViewPosition;\nvoid main(){\n\n    v_ViewPosition = worldViewProjection * vec4( position, 1.0 );\n    gl_Position = worldViewProjection * vec4( position , 1.0 );\n\n}\n@end\n\n\n@export buildin.vsm.depth.fragment\n\nvarying vec4 v_ViewPosition;\n\nvoid main(){\n    float z = v_ViewPosition.z / v_ViewPosition.w;\n\n    gl_FragColor = vec4(z, z*z, 0.0, 0.0);\n}\n@end\n\n// Point light shadow mapping\n// http://http.developer.nvidia.com/GPUGems/gpugems_ch12.html\n@export buildin.vsm.distance.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_WorldPosition;\n\nvoid main(){\n\n    gl_Position = worldViewProjection * vec4( position , 1.0 );\n    v_WorldPosition = ( world * vec4(position, 1.0) ).xyz;\n}\n\n@end\n\n@export buildin.vsm.distance.fragment\n\nuniform vec3 lightPosition;\n\nvarying vec3 v_WorldPosition;\n\nvoid main(){\n\n    float dist = distance(lightPosition, v_WorldPosition);\n\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n}\n@end\n\n\n@export buildin.plugin.compute_shadow_map\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER) || defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\n#ifdef SPOT_LIGHT_SHADOWMAP_NUMBER\nuniform sampler2D spotLightShadowMap[ SPOT_LIGHT_SHADOWMAP_NUMBER ];\nuniform mat4 spotLightMatrix[ SPOT_LIGHT_SHADOWMAP_NUMBER ]; \n#endif\n\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER\nuniform sampler2D directionalLightShadowMap[ DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER ];\nuniform mat4 directionalLightMatrix[ DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER ];\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\nuniform samplerCube pointLightShadowMap[ POINT_LIGHT_SHADOWMAP_NUMBER ];\n#endif\n\nuniform bool shadowEnabled : true;\n\n#if defined(DIRECTIONAL_LIGHT_NUMBER) || defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nvec4 vsmBoxFilter(sampler2D texture, vec2 uv){\n    vec4 tex = texture2D(texture, uv);\n    float offset = 1.0/512.0;\n    tex += texture2D(texture, uv+vec2(offset, 0.0) );\n    tex += texture2D(texture, uv+vec2(offset, offset) );\n    tex += texture2D(texture, uv+vec2(-offset, offset) );\n    tex += texture2D(texture, uv+vec2(0.0, offset) );\n    tex += texture2D(texture, uv+vec2(-offset, 0.0) );\n    tex += texture2D(texture, uv+vec2(-offset, -offset) );\n    tex += texture2D(texture, uv+vec2(offset, -offset) );\n    tex += texture2D(texture, uv+vec2(0.0, -offset) );\n\n    tex /= 9.0;\n    return tex;\n}\n\nfloat computeShadowFalloff( sampler2D map, mat4 lightVPM, vec3 position){\n    vec4 posInLightSpace = ( lightVPM * vec4(position, 1.0) );\n    posInLightSpace.xyz /= posInLightSpace.w;\n\n    float z = posInLightSpace.z;\n    // In frustum\n    if( all(greaterThan(posInLightSpace.xyz, vec3(-1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(1.0))) ){\n        \n        // To texture uv\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n        // vec2 moments = texture2D( map, uv ).xy;\n        vec2 moments = vsmBoxFilter( map, uv ).xy;\n        \n        float variance = moments.y - moments.x * moments.x;\n\n        float mD = moments.x - z;\n        float p = variance / (variance + mD * mD);\n\n        if(moments.x + 0.002 < z){\n            return clamp(p, 0.0, 1.0);\n        }else{\n            return 1.0;\n        }\n    }\n    return 1.0;\n}\n\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\n\nvec4 vsmBoxFilterCube(samplerCube texture, vec3 direction){\n    vec4 tex = textureCube(texture, direction);\n    float offset = 0.05;\n    tex += textureCube(texture, direction + vec3(offset, 0.0, 0.0) );\n    tex += textureCube(texture, direction + vec3(offset, offset, 0.0) );\n    tex += textureCube(texture, direction + vec3(-offset, offset, 0.0) );\n    tex += textureCube(texture, direction + vec3(0.0, offset, 0.0) );\n    tex += textureCube(texture, direction + vec3(-offset, 0.0, 0.0) );\n    tex += textureCube(texture, direction + vec3(-offset, -offset, 0.0) );\n    tex += textureCube(texture, direction + vec3(offset, -offset, 0.0) );\n    tex += textureCube(texture, direction + vec3(0.0, -offset, 0.0) );\n\n    tex /= 9.0;\n    return tex;\n}\n\nfloat computeShadowFallOfCube( samplerCube map, vec3 direction ){\n    \n    vec2 moments = vsmBoxFilterCube( map, direction).xy;\n\n    float variance = moments.y - moments.x * moments.x;\n\n    float dist = length(direction);\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n}\n\n#endif\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowFallOfSpotLights( vec3 position, inout float shadowFalloffs[SPOT_LIGHT_NUMBER]  ){\n    for( int i = 0; i < SPOT_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowFalloff = computeShadowFalloff( spotLightShadowMap[i], spotLightMatrix[i], position );\n        shadowFalloffs[ i ] = shadowFalloff;\n    }\n    // set default fallof of rest lights\n    for( int i = SPOT_LIGHT_SHADOWMAP_NUMBER; i < SPOT_LIGHT_NUMBER; i++){\n        shadowFalloffs[i] = 1.0;\n    }\n}\n\n#endif\n\n\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowFallOfPointLights( vec3 position, inout float shadowFalloffs[POINT_LIGHT_NUMBER]  ){\n    for( int i = 0; i < POINT_LIGHT_SHADOWMAP_NUMBER; i++){\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 direction = position - lightPosition;\n        shadowFalloffs[ i ] = computeShadowFallOfCube( pointLightShadowMap[i], direction );\n    }\n    for( int i = POINT_LIGHT_SHADOWMAP_NUMBER; i < POINT_LIGHT_NUMBER; i++){\n        shadowFalloffs[i] = 1.0;\n    }\n}\n\n#endif\n\n\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowFallOfDirectionalLights( vec3 position, inout float shadowFalloffs[DIRECTIONAL_LIGHT_NUMBER] ){\n    for( int i = 0; i < DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowFalloff = computeShadowFalloff( directionalLightShadowMap[i], directionalLightMatrix[i], position );\n        shadowFalloffs[ i ] = shadowFalloff;\n    }\n    // set default fallof of rest lights\n    for( int i = DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n        shadowFalloffs[i] = 1.0;\n    }\n}\n\n#endif\n\n#endif\n\n@end"}),n("3d/prepass/shadowmap",["require","core/base","core/vector3","../shader","../light","../light/spot","../light/directional","../light/point","../shader/library","../material","../framebuffer","../texture/texture2d","../texture/texturecube","../camera/perspective","../camera/orthographic","core/matrix4","_","./vsm.essl"],function(e){var t=e("core/base"),r=e("core/vector3"),n=e("../shader"),i=e("../light"),a=e("../light/spot"),o=e("../light/directional"),s=e("../light/point");e("../shader/library");var u=e("../material"),c=e("../framebuffer"),l=e("../texture/texture2d"),f=e("../texture/texturecube"),h=e("../camera/perspective"),d=e("../camera/orthographic"),v=e("core/matrix4"),p=e("_"),m=new c;n.import(e("./vsm.essl"));var _=t.derive(function(){return{_textures:{},_cameras:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_shadowMapOrder:{SPOT_LIGHT:0,DIRECTIONAL_LIGHT:1,SPOT_LIGHT:2}}},function(){this._depthMaterial=new u({shader:new n({vertex:n.source("buildin.vsm.depth.vertex"),fragment:n.source("buildin.vsm.depth.fragment")})}),this._pointLightDepthMaterial=new u({shader:new n({vertex:n.source("buildin.vsm.distance.vertex"),fragment:n.source("buildin.vsm.distance.fragment")})})},{render:function(e,t){this._renderShadowPass(e,t)},_renderShadowPass:function(e,t){var r=[],n=[],u=[],c=e.gl;t.update(),t.traverse(function(e){e.instanceof(i)&&e.castShadow&&n.push(e),e.material&&e.material.shader&&(e.castShadow&&r.push(e),e.receiveShadow?(u.push(e),e.material.setUniform("shadowEnabled",1)):e.material.setUniform("shadowEnabled",0))}),c.enable(c.DEPTH_TEST),c.disable(c.BLEND),c.clearColor(0,0,0,0),c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT);var l=["px","nx","py","ny","pz","nz"],f={px:c.TEXTURE_CUBE_MAP_POSITIVE_X,py:c.TEXTURE_CUBE_MAP_POSITIVE_Y,pz:c.TEXTURE_CUBE_MAP_POSITIVE_Z,nx:c.TEXTURE_CUBE_MAP_NEGATIVE_X,ny:c.TEXTURE_CUBE_MAP_NEGATIVE_Y,nz:c.TEXTURE_CUBE_MAP_NEGATIVE_Z},h=[],d=[],_=[],g=[],y=[],b=this._shadowMapOrder;n.sort(function(e,t){return b[e]-b[t]});for(var x in this._shadowMapNumber)this._shadowMapNumber[x]=0;p.each(n,function(n){if(n.instanceof(a)||n.instanceof(o)){var i=this._getTexture(n.__GUID__,n),u=this._getCamera(n.__GUID__,n);m.attach(e.gl,i),m.bind(e),c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT),e._scene=t,e.renderQueue(r,u,this._depthMaterial,!0),m.unbind(e);var p=new v;p.copy(u.worldMatrix).invert().multiplyLeft(u.projectionMatrix),n.instanceof(a)?(h.push(i),d.push(p._array)):(_.push(i),g.push(p._array))}else if(n.instanceof(s)){var i=this._getTexture(n.__GUID__,n);y.push(i);for(var b=0;6>b;b++){var x=l[b],u=this._getCamera(n.__GUID__,n,x);m.attach(e.gl,i,c.COLOR_ATTACHMENT0,f[x]),m.bind(e),c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT),e._scene=t,this._pointLightDepthMaterial.setUniform("lightPosition",n.position._array),e.renderQueue(r,u,this._pointLightDepthMaterial,!0),m.unbind(e)}}this._shadowMapNumber[n.type]++},this);for(var E=0;u.length>E;E++){var T=u[E],w=T.material,I=w.shader,O=!1;for(var x in this._shadowMapNumber){var R=this._shadowMapNumber[x],M=x+"_SHADOWMAP_NUMBER";I.fragmentDefines[M]!==R&&R>0&&(I.fragmentDefines[M]=R,O=!0)}O&&I.update(),w.setUniforms({spotLightShadowMap:h,directionalLightShadowMap:_,directionalLightMatrix:g,pointLightShadowMap:y,spotLightMatrix:d})}},_getTexture:function(e,t){var r=this._textures[e],n=t.shadowResolution||512,i=!1;return r?r.width!==n&&(r.dispose(),i=!0):i=!0,i&&(r=t.instanceof(s)?new f({width:n,height:n,type:"FLOAT"}):new l({width:n,height:n,type:"FLOAT"}),this._textures[e]=r),r},_getCamera:function(e,t,r){var n=this._cameras[e];if(r&&!n&&(n=this._cameras[e]={}),r&&(n=n[r]),n||(t.instanceof(a)||t.instanceof(s)?n=new h({near:.1}):t.instanceof(o)&&(n=new d(t.shadowCamera)),r?this._cameras[e][r]=n:this._cameras[e]=n),t.instanceof(a)&&(n.fov=2*t.penumbraAngle,n.far=t.range),t.instanceof(s)){switch(n.far=t.range,n.fov=90,n.position.set(0,0,0),r){case"px":n.lookAt(g,x);break;case"nx":n.lookAt(y,x);break;case"py":n.lookAt(b,E);break;case"ny":n.lookAt(x,T);break;case"pz":n.lookAt(E,x);break;case"nz":n.lookAt(T,x)}n.position.copy(t.position),n.update()}else n.worldMatrix.copy(t.worldMatrix);return n.updateProjectionMatrix(),n}}),g=new r(1,0,0),y=new r(-1,0,0),b=new r(0,1,0),x=new r(0,-1,0),E=new r(0,0,1),T=new r(0,0,-1);return _}),n("3d/renderer",["require","core/base","_","glmatrix","util/util","./light","./mesh","./webglinfo"],function(e){var t=e("core/base"),r=e("_"),n=e("glmatrix"),i=n.mat4,a=e("util/util"),o=e("./light"),s=e("./mesh"),u=e("./webglinfo"),c=t.derive(function(){return{__GUID__:a.genGUID(),canvas:null,devicePixelRatio:window.devicePixelRatio||1,color:[1,1,1,0],clear:16640,alhpa:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,gl:null,viewportInfo:{}}},function(){this.canvas||(this.canvas=document.createElement("canvas"));try{this.gl=this.canvas.getContext("experimental-webgl",{alhpa:this.alhpa,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer}),this.gl.__GUID__=this.__GUID__,this.resize(this.canvas.width,this.canvas.height),u.initialize(this.gl)}catch(e){throw"Error creating WebGL Context"}},{resize:function(e,t){var r=this.canvas;1!==this.devicePixelRatio&&(r.style.width=e+"px",r.style.height=t+"px"),r.width=e*this.devicePixelRatio,r.height=t*this.devicePixelRatio,this.setViewport(0,0,r.width,r.height)},setViewport:function(e,t,r,n){this.gl.viewport(e,t,r,n),this.viewportInfo={x:e,y:t,width:r,height:n}},render:function(e,t,n){var i=this.gl;n||this.trigger("beforerender",e,t);var a=this.color;i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clear);var s=[],u=[],c=[];t.update(),e.update(),this._scene=e;var l=e.material;e.traverse(function(e){if(!e.visible)return!0;if(e.instanceof(o)&&c.push(e),e.render)if(l)l.transparent?u.push(e):s.push(e);else{if(!e.material||!e.material.shader)return;if(!e.geometry)return;e.material.transparent?u.push(e):s.push(e)}}),e.filter&&(s=r.filter(s,e.filter),u=r.filter(u,e.filter));for(var f={},h=0;c.length>h;h++){var d=c[h];f[d.type]||(f[d.type]=0),f[d.type]++}e.lightNumber=f,this.updateLightUnforms(c),s.sort(this._materialSortFunc),u.sort(this._materialSortFunc),n||this.trigger("beforerender:opaque",s),i.enable(i.DEPTH_TEST),i.disable(i.BLEND),this.renderQueue(s,t,l,n),n||(this.trigger("afterrender:opaque",s),this.trigger("beforerender:transparent",u)),i.disable(i.DEPTH_TEST),i.enable(i.BLEND),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA),this.renderQueue(u,t,l,n),n||(this.trigger("afterrender:transparent",u),this.trigger("afterrender",e,t))},updateLightUnforms:function(e){var t=this._scene.lightUniforms;for(var r in t)t[r].value.length=0;for(var n=0;e.length>n;n++){var i=e[n];for(r in i.uniformTemplates){var a=i.uniformTemplates[r];t[r]||(t[r]={type:"",value:[]});var o=a.value(i),s=t[r];switch(s.type=a.type+"v",a.type){case"1i":case"1f":s.value.push(o);break;case"2f":case"3f":case"4f":for(var u=0;o.length>u;u++)s.value.push(o[u]);break;default:console.error("Unkown light uniform type "+a.type)}}}},renderQueue:function(e,t,n,a){i.invert(l.VIEW,t.worldMatrix._array),i.copy(l.PROJECTION,t.projectionMatrix._array),i.multiply(l.VIEWPROJECTION,t.projectionMatrix._array,l.VIEW),i.copy(l.VIEWINVERSE,t.worldMatrix._array),i.invert(l.PROJECTIONINVERSE,l.PROJECTION),i.invert(l.VIEWPROJECTIONINVERSE,l.VIEWPROJECTION);for(var o,u,c=this.gl,f=this._scene,h=0;e.length>h;h++){var d=e[h],v=n||d.material,p=v.shader;d.geometry;var m=v.transparent&&v.blend;if(u!==p.__GUID__){var _=!1;if(r.isEqual(p.lightNumber,f.lightNumber)||(_=!0),_){for(var g in f.lightNumber){var y=f.lightNumber[g];p.lightNumber[g]=y}p.update()}p.bind(c);for(var b in f.lightUniforms){var x=f.lightUniforms[b];p.setUniform(c,x.type,b,x.value)}u=p.__GUID__}o!==v.__GUID__&&(v.bind(c),o=v.__GUID__,s.materialChanged()),m&&m(c);var E=d.worldMatrix._array;(p.semantics.hasOwnProperty("WORLD")||p.semantics.hasOwnProperty("WORLDTRANSPOSE"))&&i.copy(l.WORLD,E),(p.semantics.hasOwnProperty("WORLDVIEW")||p.semantics.hasOwnProperty("WORLDVIEWINVERSE")||p.semantics.hasOwnProperty("WORLDVIEWINVERSETRANSPOSE"))&&i.multiply(l.WORLDVIEW,l.VIEW,E),(p.semantics.hasOwnProperty("WORLDVIEWPROJECTION")||p.semantics.hasOwnProperty("WORLDVIEWPROJECTIONINVERSE")||p.semantics.hasOwnProperty("WORLDVIEWPROJECTIONINVERSETRANSPOSE"))&&i.multiply(l.WORLDVIEWPROJECTION,l.VIEWPROJECTION,E),(p.semantics.hasOwnProperty("WORLDINVERSE")||p.semantics.hasOwnProperty("WORLDINVERSETRANSPOSE"))&&i.invert(l.WORLDINVERSE,E),(p.semantics.hasOwnProperty("WORLDVIEWINVERSE")||p.semantics.hasOwnProperty("WORLDVIEWINVERSETRANSPOSE"))&&i.invert(l.WORLDVIEWINVERSE,l.WORLDVIEW),(p.semantics.hasOwnProperty("WORLDVIEWPROJECTIONINVERSE")||p.semantics.hasOwnProperty("WORLDVIEWPROJECTIONINVERSETRANSPOSE"))&&i.invert(l.WORLDVIEWPROJECTIONINVERSE,l.WORLDVIEWPROJECTION);for(var T in l){if(p.semantics.hasOwnProperty(T)){var w=l[T],I=p.semantics[T];p.setUniform(c,I.type,I.symbol,w)}if(p.semantics.hasOwnProperty(T+"TRANSPOSE")){var O=l[T+"TRANSPOSE"],w=l[T],R=p.semantics[T+"TRANSPOSE"];i.transpose(O,w),p.setUniform(c,R.type,R.symbol,O)}}a||this.trigger("beforerender:mesh",d);var M=d.render(this,n);a||this.trigger("afterrender:mesh",d,M),m&&(c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA))}},_materialSortFunc:function(e,t){return e.material.shader==t.material.shader?e.material.__GUID__-t.material.__GUID__:e.material.shader.__GUID__-t.material.__GUID__}}),l={WORLD:i.create(),VIEW:i.create(),PROJECTION:i.create(),WORLDVIEW:i.create(),VIEWPROJECTION:i.create(),WORLDVIEWPROJECTION:i.create(),WORLDINVERSE:i.create(),VIEWINVERSE:i.create(),PROJECTIONINVERSE:i.create(),WORLDVIEWINVERSE:i.create(),VIEWPROJECTIONINVERSE:i.create(),WORLDVIEWPROJECTIONINVERSE:i.create(),WORLDTRANSPOSE:i.create(),VIEWTRANSPOSE:i.create(),PROJECTIONTRANSPOSE:i.create(),WORLDVIEWTRANSPOSE:i.create(),VIEWPROJECTIONTRANSPOSE:i.create(),WORLDVIEWPROJECTIONTRANSPOSE:i.create(),WORLDINVERSETRANSPOSE:i.create(),VIEWINVERSETRANSPOSE:i.create(),PROJECTIONINVERSETRANSPOSE:i.create(),WORLDVIEWINVERSETRANSPOSE:i.create(),VIEWPROJECTIONINVERSETRANSPOSE:i.create(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:i.create()};return c}),n("3d/util/mesh",["require","../geometry","../mesh","glmatrix","_"],function(e){var t=e("../geometry"),r=e("../mesh"),n=e("glmatrix"),i=e("_");n.mat4;var a=n.vec3,o={merge:function(e,n){function o(e){return n?e&&Array.prototype.slice.call(e):e}if(e.length){var n=n===void 0?!0:n,s=e[0],u=s.geometry,c=s.material;i.any(e,function(e){return e.material!==c})&&console.warn("Material of meshes to merge is not the same, program will use the material of first mesh by default");var l=new t,f=l.faces;for(var h in u.attributes){var d=u.attributes[h];l.attributes[h]||(l.attributes[h]={value:[],type:d.type})}for(var v=0,p=0!==u.faces.length,m=0;e.length>m;m++){var _=e[m],g=_.geometry;_.updateMatrix();var y=g.getVerticesNumber();for(var h in g.attributes){var b=g.attributes[h],x=l.attributes[h];if(b.value.length)for(var E=0;y>E;E++)if("position"===h){var T=o(b.value[E]);a.transformMat4(T,T,_.matrix._array),x.value.push(T)}else if("normal"===h){var T=o(b.value[E]);x.value.push(T)}else if("tangent"===h){var T=o(b.value[E]);x.value.push(T)}else x.value.push(o(b.value[E]))}if(p){var w=g.faces.length;for(E=0;w>E;E++){var I=[],O=g.faces[E];I[0]=O[0]+v,I[1]=O[1]+v,I[2]=O[2]+v,f.push(I)}}v+=y}return new r({material:c,geometry:l})}}};return o}),n("core/event",["require","./base"],function(e){var t=e("./base"),r=t.derive({cancelBubble:!1},{stopPropagation:function(){this.cancelBubble=!0}});r.throw=function(e,t,r){var n=new MouseEvent(r);for(n.sourceTarget=t;t&&!n.cancelBubble;)n.target=t,t.trigger(e,n),t=t.parent}}),n("core/request",["require"],function(){function e(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var r=t.loaded/t.total;e.onprogress(r,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(){e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}function t(){}return{get:e,put:t}}),n("core/vector2",function(){}),n("core/vector4",["require","glmatrix"],function(e){var t=e("glmatrix"),r=t.vec4,n=function(e,t,n,a){return e=e||0,t=t||0,n=n||0,a=a||0,Object.create(i,{x:{configurable:!1,set:function(e){this._array[0]=e,this._dirty=!0},get:function(){return this._array[0]}},y:{configurable:!1,set:function(e){this._array[1]=e,this._dirty=!0},get:function(){return this._array[1]}},z:{configurable:!1,set:function(e){this._array[2]=e,this._dirty=!0},get:function(){return this._array[2]}},w:{configurable:!1,set:function(e){this._array[2]=e,this._dirty=!0},get:function(){return this._array[2]}},_array:{writable:!1,configurable:!1,value:r.fromValues(e,t,n,a)},_dirty:{configurable:!1,value:!1}})},i={constructor:n,add:function(e){return r.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,r,n){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},clone:function(){return new n(this.x,this.y,this.z,this.w)},copy:function(e){return r.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return r.cross(e._array,this._array,t._array),this},dist:function(e){return r.dist(this._array,e._array)},distance:function(e){return r.distance(this._array,e._array)},div:function(e){return r.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return r.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return r.dot(this._array,e._array)},len:function(){return r.len(this._array)},length:function(){return r.length(this._array)},lerp:function(e,t,n){return r.lerp(this._array,e._array,t._array,n),this._dirty=!0,this},mul:function(e){return r.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return r.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return r.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return r.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return r.random(this._array,e),this._dirty=!0,this},scale:function(e){return r.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return r.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return r.sqrDist(this._array,e._array)},squaredDistance:function(e){return r.squaredDistance(this._array,e._array)},sqrLen:function(){return r.sqrLen(this._array)},squaredLength:function(){return r.squaredLength(this._array)},sub:function(e){return r.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return r.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return r.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return r.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};return n}),n("3d/skeleton",["require","core/base","core/matrix4"],function(e){var t=e("core/base"),r=e("core/matrix4"),n=t.derive(function(){return{roots:[],bones:[],_jointMatrices:[],_boneMatrices:[],_boneMatricesArray:null}},function(){this.updateHierarchy(),this.updateJointMatrices()},{updateHierarchy:function(){this.roots=[];for(var e=this.bones,t=0;e.length>t;t++){var r=e[t];if(r.parentIndex>=0){var n=e[r.parentIndex];n.add(r)}else this.roots.push(r)}},updateJointMatrices:function(){for(var e=0;this.roots.length>e;e++)this.roots[e].update();for(var e=0;this.bones.length>e;e++){var t=this.bones[e];this._jointMatrices[e]=(new r).copy(t.worldMatrix).invert(),this._boneMatrices[e]=new r}},update:function(){for(var e=0;this.roots.length>e;e++)this.roots[e].update();for(var t=this.getBoneMatricesArray(),r=0,e=0;this.bones.length>e;e++){var n=this.bones[e].worldMatrix;this._boneMatrices[e].copy(n).multiply(this._jointMatrices[e]);for(var i=0;16>i;i++){var a=this._boneMatrices[e]._array;t[r++]=a[i]}}},getBoneMatricesArray:function(){return this._boneMatricesArray||(this._boneMatricesArray=new Float32Array(16*this.bones.length)),this._boneMatricesArray},setPose:function(e){for(var t=0;this.bones.length>t;t++)this.bones[t].setPose(e);this.update()}});return n}),n("3d/bone",["require","./node","core/quaternion","core/vector3","core/matrix4"],function(e){var t=e("./node");e("core/quaternion"),e("core/vector3"),e("core/matrix4");var r=t.derive(function(){return{index:-1,parentIndex:-1,poses:[]}},{setPose:function(e){this._lerpField(e,"position"),this._lerpField(e,"rotation"),this._lerpField(e,"scale")},_lerpField:function(e,t){for(var r,n,i=this.poses,a=i.length,o=0;a>o;o++)if(e>=i[o].time&&i[o][t]){r=i[o];break}for(o++;a>o;o++)if(i[o].time>=e&&i[o][t]){n=i[o];break}if(r&&n){var s=(e-r.time)/(n.time-r.time);s=Math.max(Math.min(s,1),0),"rotation"===t?this[t].slerp(r[t],n[t],s):this[t].lerp(r[t],n[t],s)}}});return r}),n("loader/three/model",["require","core/base","core/request","3d/shader","3d/material","3d/geometry","3d/mesh","3d/node","3d/texture/texture2d","3d/texture/texturecube","3d/shader/library","3d/skeleton","3d/bone","core/vector3","core/quaternion","_","glmatrix"],function(e){function t(e,t){return e&1<<t}function r(e){var t=255&e>>16,r=255&e>>8,n=255&e;return[t/255,r/255,n/255]}e("core/base");var n=e("core/request"),i=e("3d/shader"),a=e("3d/material"),o=e("3d/geometry"),s=e("3d/mesh"),u=e("3d/node"),c=e("3d/texture/texture2d");e("3d/texture/texturecube");var l=e("3d/shader/library"),f=e("3d/skeleton"),h=e("3d/bone"),d=e("core/vector3"),v=e("core/quaternion"),p=e("_"),m=e("glmatrix");m.vec3,m.vec2;var _=u.derive(function(){return{textureRootPath:"",textureNumber:0}},{load:function(e){var t=this;this.textureNumber=0,n.get({url:e,onprogress:function(e,r,n){t.trigger("progress",e,r,n)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(e){var t=this.parseGeometry(e),r=e.skinIndices,n=e.skinWeights,i=r&&r.length&&n&&n.length;if(i)var a=this.parseSkeleton(e),o=a.bones.length;else var o=0;if(i)var a=this.parseSkeleton(e),o=a.bones.length;else var o=0;for(var u=[],c=0;e.materials.length>c;c++){var l=t[c];if(l&&l.faces.length&&l.attributes.position.value.length){var f=this.parseMaterial(e.materials[c],o),h=new s({geometry:t[c],material:f});i&&(h.skeleton=a),u.push(h)}}return this.trigger("load",u),u},parseGeometry:function(e){function n(e,t){return M[e]>=0?(P=A[e],m=i[P],_=m.attributes,g=_.position.value,y=_.normal.value,b=[_.texcoord0.value,_.texcoord1.value],x=_.color.value,T=_.boneWeight.value,E=_.boneIndex.value,N[t]=!1,M[e]):(g.push([c[3*e],c[3*e+1],c[3*e+2]]),p&&(T.push([d[2*e],d[2*e+1],0]),E.push([h[2*e],h[2*e+1],-1,-1])),M[e]=a[C],A[e]=C,N[t]=!0,a[C]++)}for(var i=[],a=[],s=0;e.materials.length>s;s++)i[s]=null,a[s]=0;i[0]=new o,e.materials&&e.materials.length>1;var u=e.faces,c=e.vertices,l=e.normals,f=e.colors,h=e.skinIndices,d=e.skinWeights,v=e.uvs,p=h&&h.length&&d&&d.length,m=i[0],_=m.attributes,g=_.position.value,y=_.normal.value,b=[_.texcoord0.value,_.texcoord1.value],x=_.color.value,E=_.boneIndex.value,T=_.boneWeight.value,w=m.faces,I=0;v[0]&&v[0].length&&I++,v[1]&&v[1].length&&I++;for(var O=0,R=u.length,M=[],A=[],s=0;c.length>s;s++)M[s]=-1,A[s]=-1;for(var P=0,N=[],D=[],S=[],L=[],s=0;4>s;s++)D[s]=[0,0],S[s]=[0,0,0],L[s]=[0,0,0];for(var C=0;R>O;){var U=u[O++],F=t(U,0),k=t(U,1),W=t(U,2),B=t(U,3),z=t(U,4),V=t(U,5),G=t(U,6),H=t(U,7),q=F?4:3;if(k&&(C=u[O+(F?4:3)],i[C]||(i[C]=new o),m=i[C],_=m.attributes,g=_.position.value,y=_.normal.value,b=[_.texcoord0.value,_.texcoord1.value],x=_.color.value,T=_.boneWeight.value,E=_.boneIndex.value,w=m.faces),F){var j=u[O++],X=u[O++],J=u[O++],Y=u[O++],Q=n(j,0),Z=n(X,1),K=n(Y,2),$=n(X,3),et=n(J,4),tt=n(Y,5);w.push([Q,Z,K],[$,et,tt])}else{var Q=u[O++],Z=u[O++],K=u[O++];Q=n(Q,0),Z=n(Z,1),K=n(K,2),w.push([Q,Z,K])}if(k&&O++,W)for(var s=0;I>s;s++){var rt=v[s],nt=w[O++],it=rt[2*nt],at=rt[2*nt+1];F?(N[0]&&(b[s][Q]=[it,at]),N[1]&&(b[s][Z]=[it,at]),N[2]&&(b[s][K]=[it,at]),N[3]&&(b[s][$]=[it,at]),N[4]&&(b[s][et]=[it,at]),N[5]&&(b[s][tt]=[it,at])):(N[0]&&(b[s][Q]=[it,at]),N[1]&&(b[s][Z]=[it,at]),N[2]&&(b[s][K]=[it,at]))}if(B)for(var s=0;I>s;s++){for(var rt=v[s],ot=0;q>ot;ot++){var nt=u[O++];D[ot][0]=rt[2*nt],D[ot][1]=rt[2*nt+1]}F?(N[0]&&(b[s][Q]=D[0].slice()),N[1]&&(b[s][Z]=D[1].slice()),N[2]&&(b[s][K]=D[3].slice()),N[3]&&(b[s][$]=D[1].slice()),N[4]&&(b[s][et]=D[2].slice()),N[5]&&(b[s][tt]=D[3].slice())):(N[0]&&(b[s][Q]=D[0].slice()),N[1]&&(b[s][Z]=D[1].slice()),N[2]&&(b[s][K]=D[2].slice()))}if(z){var st=3*u[O++],ut=l[st++],ct=l[st++],lt=l[st];F?(N[0]&&(y[Q]=[ut,ct,lt]),N[1]&&(y[Z]=[ut,ct,lt]),N[2]&&(y[K]=[ut,ct,lt]),N[3]&&(y[$]=[ut,ct,lt]),N[4]&&(y[et]=[ut,ct,lt]),N[5]&&(y[tt]=[ut,ct,lt])):(N[0]&&(y[Q]=[ut,ct,lt]),N[1]&&(y[Z]=[ut,ct,lt]),N[2]&&(y[K]=[ut,ct,lt]))}if(V){for(var s=0;q>s;s++){var st=3*u[O++];S[s][0]=l[st++],S[s][1]=l[st++],S[s][2]=l[st]}F?(N[0]&&(y[Q]=S[0].slice()),N[1]&&(y[Z]=S[1].slice()),N[2]&&(y[K]=S[3].slice()),N[3]&&(y[$]=S[1].slice()),N[4]&&(y[et]=S[2].slice()),N[5]&&(y[tt]=S[3].slice())):(N[0]&&(y[Q]=S[0].slice()),N[1]&&(y[Z]=S[1].slice()),N[2]&&(y[K]=S[2].slice()))
}if(G){var ft=u[O++],ht=r(f[ft]);F?(N[0]&&(x[Q]=ht),N[1]&&(x[Z]=ht),N[2]&&(x[K]=ht),N[3]&&(x[$]=ht),N[4]&&(x[et]=ht),N[5]&&(x[tt]=ht)):(N[0]&&(x[Q]=ht),N[1]&&(x[Z]=ht),N[2]&&(x[K]=ht))}if(H){for(var s=0;q>s;s++){var ft=u[O++];L[s]=r(f[ft])}F?(N[0]&&(x[Q]=L[0].slice()),N[1]&&(x[Z]=L[1].slice()),N[2]&&(x[K]=L[3].slice()),N[3]&&(x[$]=L[1].slice()),N[4]&&(x[et]=L[2].slice()),N[5]&&(x[tt]=L[3].slice())):(N[0]&&(x[Q]=L[0].slice()),N[1]&&(x[Z]=L[1].slice()),N[2]&&(x[K]=L[2].slice()))}}return i},parseSkeleton:function(e){for(var t=[],r=e.bones,n=0;r.length>n;n++){var i=r[n],a=new h({parentIndex:i.parent,name:i.name,position:new d(i.pos[0],i.pos[1],i.pos[2]),rotation:new v(i.rotq[0],i.rotq[1],i.rotq[2],i.rotq[3]),scale:new d(i.scl[0],i.scl[1],i.scl[2])});t.push(a)}var o=new f({bones:t});if(o.update(),e.animation)for(var s=e.animation.hierarchy,n=0;s.length>n;n++)for(var u=s[n],a=t[n],c=0;u.keys.length>c;c++){var l=u.keys[c];a.poses[c]={};var p=a.poses[c];p.time=parseFloat(l.time),l.pos&&(p.position=new d(l.pos[0],l.pos[1],l.pos[2])),l.rot&&(p.rotation=new v(l.rot[0],l.rot[1],l.rot[2],l.rot[3])),l.scl&&(p.scale=new d(l.scl[0],l.scl[1],l.scl[2]))}return o},parseMaterial:function(e,t){var n="buildin.lambert",o=e.shading&&e.shading.toLowerCase();("phong"===o||"lambert"===o)&&(n="buildin."+o);var s=[];if(e.mapDiffuse&&s.push("diffuseMap"),(e.mapNormal||e.mapBump)&&s.push("normalMap"),0==t)var u=l.get(n,s);else{for(var u=new i({vertex:i.source(n+".vertex"),fragment:i.source(n+".fragment")}),c=0;s>c;c++)u.enableTexture(s[c]);u.vertexDefines.SKINNING=null,u.vertexDefines.BONE_MATRICES_NUMBER=t}var f=new a({shader:u});return e.colorDiffuse?f.setUniform("color",e.colorDiffuse):e.DbgColor&&f.setUniform("color",r(e.DbgColor)),e.colorSpecular&&f.setUniform("specular",e.colorSpecular),void 0!==e.transparent&&e.transparent&&(f.transparent=!0),p.isUndefined(e.depthTest)||(f.depthTest=e.depthTest),p.isUndefined(e.depthWrite)||(f.depthTest=e.depthWrite),e.transparency&&1>e.transparency&&f.setUniform("opacity",e.transparency),e.specularCoef&&f.setUniform("shininess",e.specularCoef),e.mapDiffuse&&f.setUniform("diffuseMap",this.loadTexture(e.mapDiffuse,e.mapDiffuseWrap)),e.mapBump&&f.setUniform("normalMap",this.loadTexture(e.mapBump,e.mapBumpWrap)),e.mapNormal&&f.setUniform("normalMap",this.loadTexture(e.mapNormal,e.mapBumpWrap)),f},loadTexture:function(e,t){var r=this,n=new Image,i=new c;return i.image=n,this.textureNumber++,t&&t.length&&(i.wrapS=t[0].toUpperCase(),i.wrapT=t[1].toUpperCase()),n.onload=function(){r.trigger("load:texture",i),i.dirty()},n.src=this.textureRootPath+"/"+e,i}});return _}),n("loader/three/scene",["require","core/base","core/request","3d/scene","./model","3d/light/ambient","3d/light/directional","3d/light/spot","3d/light/point","3d/node","3d/texture/texture2d","3d/texture/texturecube","3d/mesh","3d/material","3d/geometry"],function(e){var t=e("core/base"),r=e("core/request"),n=e("3d/scene");e("./model"),e("3d/light/ambient"),e("3d/light/directional"),e("3d/light/spot"),e("3d/light/point");var i=e("3d/node");e("3d/texture/texture2d"),e("3d/texture/texturecube");var a=e("3d/mesh");e("3d/material"),e("3d/geometry"),t.derive(function(){return{textureRootPath:"",textureNumber:0}},{load:function(e){var t=this;this.textureNumber=0,r.get({url:e,onprogress:function(e,r,n){t.trigger("progress",e,r,n)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(){var e=new n;this.parseHierarchy(root,e)},parseHierarchy:function(e){for(var t in e){var r=e[t];r.geometry&&r.material?new a:new i}}})}),n("util/color",["require"],function(){}),n("util/xmlparser",["require"],function(){}),n("qtek3d",["require","3d/camera","3d/camera/orthographic","3d/camera/perspective","3d/compositor","3d/compositor/graph/graph","3d/compositor/graph/node","3d/compositor/graph/scenenode","3d/compositor/graph/texturepool","3d/compositor/pass","3d/debug/pointlight","3d/debug/renderinfo","3d/framebuffer","3d/geometry","3d/geometry/cube","3d/geometry/plane","3d/geometry/sphere","3d/light","3d/light/ambient","3d/light/directional","3d/light/point","3d/light/spot","3d/material","3d/mesh","3d/node","3d/plugin/firstpersoncontrol","3d/prepass/shadowmap","3d/renderer","3d/scene","3d/shader","3d/shader/library","3d/texture","3d/texture/texture2d","3d/texture/texturecube","3d/util/mesh","3d/webglinfo","core/base","core/cache","core/event","core/matrix3","core/matrix4","core/mixin/derive","core/mixin/dirty","core/mixin/notifier","core/quaternion","core/request","core/vector2","core/vector3","core/vector4","loader/three/model","loader/three/scene","util/color","util/util","util/xmlparser","glmatrix"],function(e){var t={"3d":{Camera:e("3d/camera"),camera:{Orthographic:e("3d/camera/orthographic"),Perspective:e("3d/camera/perspective")},Compositor:e("3d/compositor"),compositor:{graph:{Graph:e("3d/compositor/graph/graph"),Node:e("3d/compositor/graph/node"),SceneNode:e("3d/compositor/graph/scenenode"),Texturepool:e("3d/compositor/graph/texturepool")},Pass:e("3d/compositor/pass")},debug:{Pointlight:e("3d/debug/pointlight"),RenderInfo:e("3d/debug/renderinfo")},FrameBuffer:e("3d/framebuffer"),Geometry:e("3d/geometry"),geometry:{Cube:e("3d/geometry/cube"),Plane:e("3d/geometry/plane"),Sphere:e("3d/geometry/sphere")},Light:e("3d/light"),light:{Ambient:e("3d/light/ambient"),Directional:e("3d/light/directional"),Point:e("3d/light/point"),Spot:e("3d/light/spot")},Material:e("3d/material"),Mesh:e("3d/mesh"),Node:e("3d/node"),plugin:{FirstPersonControl:e("3d/plugin/firstpersoncontrol")},prepass:{ShadowMap:e("3d/prepass/shadowmap")},Renderer:e("3d/renderer"),Scene:e("3d/scene"),Shader:e("3d/shader"),shader:{library:e("3d/shader/library")},Texture:e("3d/texture"),texture:{Texture2D:e("3d/texture/texture2d"),TextureCube:e("3d/texture/texturecube")},util:{mesh:e("3d/util/mesh")},WebGLInfo:e("3d/webglinfo")},core:{Base:e("core/base"),Cache:e("core/cache"),Event:e("core/event"),Matrix3:e("core/matrix3"),Matrix4:e("core/matrix4"),mixin:{derive:e("core/mixin/derive"),Dirty:e("core/mixin/dirty"),notifier:e("core/mixin/notifier")},Quaternion:e("core/quaternion"),requester:e("core/request"),Vector2:e("core/vector2"),Vector3:e("core/vector3"),Vector4:e("core/vector4")},loader:{three:{Model:e("loader/three/model"),Scene:e("loader/three/scene")}},util:{Color:e("util/color"),Util:e("util/util"),Xmlparser:e("util/xmlparser")}},r=e("glmatrix");return t.math=r,t});var i=r("qtek3d");for(var a in i)e[a]=i[a]});